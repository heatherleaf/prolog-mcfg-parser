%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Autogenerated multilingual MCFG grammar
%% Optimized for parsing with the Active bottomup algorithm
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Start symbols for language module: swedish

%% No start symbols defined

%% Start symbols for language module: english

%% No start symbols defined

%% Optimized clauses for language module: swedish

:- discontiguous swedish:eps_rule/3, swedish:tok_rule/5, swedish:cat_rule/7.

swedish : cat_rule(np, p1, 1, p1, [arg(vp, 2, p1), arg(vp, 2, p2)], [], rule(s, s_decl, c(np, vp))).
swedish : cat_rule(vp, p1, 2, p1, [arg(np, 1, p1), arg(vp, 2, p2)], [], rule(s, s_que, c(np, vp))).
swedish : cat_rule(d_utr_sg, p1, 1, p1, [arg(n_utr_sg, 2, p1)], [], rule(np2, np, c(d_utr_sg, n_utr_sg))).
swedish : cat_rule(d_neu_sg, p1, 1, p1, [arg(n_neu_sg, 2, p1)], [], rule(np2, np, c(d_neu_sg, n_neu_sg))).
swedish : cat_rule(d_pl, p1, 1, p1, [arg(n_pl, 2, p1)], [], rule(np2, np, c(d_pl, n_pl))).
swedish : cat_rule(n_pl, p1, 1, p1, [], [], rule(np1, np, c(n_pl))).
swedish : cat_rule(v, p1, 1, p1, [], [p2=[arg(np, 2, p1)]], rule(vp, vp, c(v, np))).
swedish : tok_rule(en, p1, [], [], rule(d_one, d_utr_sg, c)).
swedish : tok_rule(ett, p1, [], [], rule(d_one, d_utr_pl, c)).
swedish : tok_rule(många, p1, [], [], rule(d_many, d_pl, c)).
swedish : tok_rule(lejon, p1, [], [], rule(n_lion, n_neu_sg, c)).
swedish : tok_rule(lejon, p1, [], [], rule(n_lion, n_pl, c)).
swedish : tok_rule(fisk, p1, [], [], rule(n_fish, n_utr_sg, c)).
swedish : tok_rule(fiskar, p1, [], [], rule(n_fish, n_pl, c)).
swedish : tok_rule(äter, p1, [], [], rule(v_eat, v, c)).
swedish : tok_rule(jagar, p1, [], [], rule(v_hunt, v, c)).
%% Optimized clauses for language module: english

:- discontiguous english:eps_rule/3, english:tok_rule/5, english:cat_rule/7.

english : cat_rule(np_sg, p1, 1, p1, [arg(vp_sg, 2, p1)], [], rule(s, s, c(np_sg, vp_sg))).
english : cat_rule(np_pl, p1, 1, p1, [arg(vp_pl, 2, p1)], [], rule(s, s, c(np_pl, vp_pl))).
english : cat_rule(d_sg, p1, 1, p1, [arg(n_sg, 2, p1)], [], rule(np2, np_sg, c(d_sg, n_sg))).
english : cat_rule(d_pl, p1, 1, p1, [arg(n_pl, 2, p1)], [], rule(np2, np_pl, c(d_pl, n_pl))).
english : cat_rule(n_pl, p1, 1, p1, [], [], rule(np1, np_pl, c(n_pl))).
english : cat_rule(v_sg, p1, 1, p1, [arg(np_sg, 2, p1)], [], rule(vp, vp_sg, c(v_sg, np_sg))).
english : cat_rule(v_sg, p1, 1, p1, [arg(np_pl, 2, p1)], [], rule(vp, vp_sg, c(v_sg, np_pl))).
english : cat_rule(v_pl, p1, 1, p1, [arg(np_sg, 2, p1)], [], rule(vp, vp_pl, c(v_pl, np_sg))).
english : cat_rule(v_pl, p1, 1, p1, [arg(np_pl, 2, p1)], [], rule(vp, vp_pl, c(v_pl, np_pl))).
english : tok_rule(a, p1, [], [], rule(d_one, d_sg, c)).
english : tok_rule(many, p1, [], [], rule(d_many, d_pl, c)).
english : tok_rule(lion, p1, [], [], rule(n_lion, n_sg, c)).
english : tok_rule(lions, p1, [], [], rule(n_lion, n_pl, c)).
english : tok_rule(fish, p1, [], [], rule(n_fish, n_sg, c)).
english : tok_rule(fish, p1, [], [], rule(n_fish, n_pl, c)).
english : tok_rule(eats, p1, [], [], rule(v_eat, v_sg, c)).
english : tok_rule(eat, p1, [], [], rule(v_eat, v_pl, c)).
english : tok_rule(hunts, p1, [], [], rule(v_hunt, v_sg, c)).
english : tok_rule(hunt, p1, [], [], rule(v_hunt, v_pl, c)).
