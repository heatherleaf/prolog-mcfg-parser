%% Prolog MCFG grammar, autogenerated from Caml source

:- op(600, xfy, [==>, ::=]).


%% S --> Bu   [0,0;0,1;0,2]	(* $ --> c   [0,0;0,1;0,2] *)
rule('S', 'S', c('Bu'), [s0=[arg('Bu',1,s0),arg('Bu',1,s1),arg('Bu',1,s2)]]).

%% At --> As   As   [0,0][1,0]	(* @@ --> @   @   [0,0][1,0] *)
rule('At', 'At', c('As', 'As'), [s0=[arg('As',1,s0)], s1=[arg('As',2,s0)]]).

%% AE --> CA   AE   [0,0;0,1;0,2;1,0][1,1][1,2]	(* A --> deg   A   [0,0;0,1;0,2;1,0][1,1][1,2] *)
rule('AE', 'AE', c('CA', 'AE'), [s0=[arg('CA',1,s0),arg('CA',1,s1),arg('CA',1,s2),arg('AE',2,s0)], s1=[arg('AE',2,s1)], s2=[arg('AE',2,s2)]]).

%% AF --> DG   Br   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case --> /a,Be   a;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AF', 'AF', c('DG', 'Br'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('Br',2,s0),arg('Br',2,s1),arg('Br',2,s2)], s3=[arg('Br',2,s3)]]).

%% AF --> Dl   CW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case --> /ving,Be   ving;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AF', 'AF', c('Dl', 'CW'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('CW',2,s0),arg('CW',2,s1),arg('CW',2,s2)], s3=[arg('CW',2,s3)]]).

%% AG --> DG   Aa   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-f --> /a,Be   a;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AG', 'AG', c('DG', 'Aa'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('Aa',2,s0),arg('Aa',2,s1),arg('Aa',2,s2)], s3=[arg('Aa',2,s3)], s4=[arg('Aa',2,s4)]]).

%% AG --> Dl   Al   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-f --> /ving,Be   ving;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AG', 'AG', c('Dl', 'Al'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('Al',2,s0),arg('Al',2,s1),arg('Al',2,s2)], s3=[arg('Al',2,s3)], s4=[arg('Al',2,s4)]]).

%% AH --> DG   r   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-f;-wh_rel --> /a,Be   a;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AH', 'AH', c('DG', 'r'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('r',2,s0),arg('r',2,s1),arg('r',2,s2)], s3=[arg('r',2,s3)], s4=[arg('r',2,s4)], s5=[arg('r',2,s5)]]).

%% AH --> Dl   y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-f;-wh_rel --> /ving,Be   ving;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AH', 'AH', c('Dl', 'y'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('y',2,s0),arg('y',2,s1),arg('y',2,s2)], s3=[arg('y',2,s3)], s4=[arg('y',2,s4)], s5=[arg('y',2,s5)]]).

%% AI --> DG   Ab   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-wh_rel --> /a,Be   a;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AI', 'AI', c('DG', 'Ab'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('Ab',2,s0),arg('Ab',2,s1),arg('Ab',2,s2)], s3=[arg('Ab',2,s3)], s4=[arg('Ab',2,s4)]]).

%% AI --> Dl   Am   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-wh_rel --> /ving,Be   ving;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AI', 'AI', c('Dl', 'Am'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('Am',2,s0),arg('Am',2,s1),arg('Am',2,s2)], s3=[arg('Am',2,s3)], s4=[arg('Am',2,s4)]]).

%% AJ --> DG   s   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-wh_rel;-f --> /a,Be   a;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AJ', 'AJ', c('DG', 's'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('s',2,s0),arg('s',2,s1),arg('s',2,s2)], s3=[arg('s',2,s3)], s4=[arg('s',2,s4)], s5=[arg('s',2,s5)]]).

%% AJ --> Dl   z   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-wh_rel;-f --> /ving,Be   ving;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AJ', 'AJ', c('Dl', 'z'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('z',2,s0),arg('z',2,s1),arg('z',2,s2)], s3=[arg('z',2,s3)], s4=[arg('z',2,s4)], s5=[arg('z',2,s5)]]).

%% AK --> DG   Bs   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case,-wh_rel --> /a,Be   a;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AK', 'AK', c('DG', 'Bs'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('Bs',2,s0),arg('Bs',2,s1),arg('Bs',2,s2)], s3=[arg('Bs',2,s3)]]).

%% AK --> Dl   CX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case,-wh_rel --> /ving,Be   ving;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AK', 'AK', c('Dl', 'CX'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('CX',2,s0),arg('CX',2,s1),arg('CX',2,s2)], s3=[arg('CX',2,s3)]]).

%% AL --> DG   Bt   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case,-wh_rel;-f --> /a,Be   a;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AL', 'AL', c('DG', 'Bt'), [s0=[arg('DG',1,s0)], s1=[arg('DG',1,s1)], s2=[arg('DG',1,s2),arg('Bt',2,s0),arg('Bt',2,s1),arg('Bt',2,s2)], s3=[arg('Bt',2,s3)], s4=[arg('Bt',2,s4)]]).

%% AL --> Dl   CY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case,-wh_rel;-f --> /ving,Be   ving;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AL', 'AL', c('Dl', 'CY'), [s0=[arg('Dl',1,s0)], s1=[arg('Dl',1,s1)], s2=[arg('Dl',1,s2),arg('CY',2,s0),arg('CY',2,s1),arg('CY',2,s2)], s3=[arg('CY',2,s3)], s4=[arg('CY',2,s4)]]).

%% BX --> Dm   CW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Been;-case --> /ving,Been   ving;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('BX', 'BX', c('Dm', 'CW'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('CW',2,s0),arg('CW',2,s1),arg('CW',2,s2)], s3=[arg('CW',2,s3)]]).

%% BY --> Dm   Al   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case;-f --> /ving,Been   ving;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('BY', 'BY', c('Dm', 'Al'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('Al',2,s0),arg('Al',2,s1),arg('Al',2,s2)], s3=[arg('Al',2,s3)], s4=[arg('Al',2,s4)]]).

%% BZ --> Dm   y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Been;-case;-f;-wh_rel --> /ving,Been   ving;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('BZ', 'BZ', c('Dm', 'y'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('y',2,s0),arg('y',2,s1),arg('y',2,s2)], s3=[arg('y',2,s3)], s4=[arg('y',2,s4)], s5=[arg('y',2,s5)]]).

%% Ba --> Dm   Am   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case;-wh_rel --> /ving,Been   ving;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Ba', 'Ba', c('Dm', 'Am'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('Am',2,s0),arg('Am',2,s1),arg('Am',2,s2)], s3=[arg('Am',2,s3)], s4=[arg('Am',2,s4)]]).

%% Bb --> Dm   z   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Been;-case;-wh_rel;-f --> /ving,Been   ving;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('Bb', 'Bb', c('Dm', 'z'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('z',2,s0),arg('z',2,s1),arg('z',2,s2)], s3=[arg('z',2,s3)], s4=[arg('z',2,s4)], s5=[arg('z',2,s5)]]).

%% Bc --> Dm   CX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Been;-case,-wh_rel --> /ving,Been   ving;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Bc', 'Bc', c('Dm', 'CX'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('CX',2,s0),arg('CX',2,s1),arg('CX',2,s2)], s3=[arg('CX',2,s3)]]).

%% Bd --> Dm   CY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case,-wh_rel;-f --> /ving,Been   ving;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Bd', 'Bd', c('Dm', 'CY'), [s0=[arg('Dm',1,s0)], s1=[arg('Dm',1,s1)], s2=[arg('Dm',1,s2),arg('CY',2,s0),arg('CY',2,s1),arg('CY',2,s2)], s3=[arg('CY',2,s3)], s4=[arg('CY',2,s4)]]).

%% Be --> Dh   CO   [0,0][0,1][0,2;1,0;1,1;1,2]	(* Ce --> /t,Ce   t   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('Be', 'Be', c('Dh', 'CO'), [s0=[arg('Dh',1,s0)], s1=[arg('Dh',1,s1)], s2=[arg('Dh',1,s2),arg('CO',2,s0),arg('CO',2,s1),arg('CO',2,s2)]]).

%% Bf --> Dh   CP   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Ce;-f --> /t,Ce   t;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Bf', 'Bf', c('Dh', 'CP'), [s0=[arg('Dh',1,s0)], s1=[arg('Dh',1,s1)], s2=[arg('Dh',1,s2),arg('CP',2,s0),arg('CP',2,s1),arg('CP',2,s2)], s3=[arg('CP',2,s3)]]).

%% Bg --> Dh   CQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Ce;-f;-wh_rel --> /t,Ce   t;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Bg', 'Bg', c('Dh', 'CQ'), [s0=[arg('Dh',1,s0)], s1=[arg('Dh',1,s1)], s2=[arg('Dh',1,s2),arg('CQ',2,s0),arg('CQ',2,s1),arg('CQ',2,s2)], s3=[arg('CQ',2,s3)], s4=[arg('CQ',2,s4)]]).

%% Bh --> Dh   Ah   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Ce;-wh_rel --> /t,Ce   t;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Bh', 'Bh', c('Dh', 'Ah'), [s0=[arg('Dh',1,s0)], s1=[arg('Dh',1,s1)], s2=[arg('Dh',1,s2),arg('Ah',2,s0),arg('Ah',2,s1),arg('Ah',2,s2)], s3=[arg('Ah',2,s3)]]).

%% Bi --> Dh   Ai   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Ce;-wh_rel;-f --> /t,Ce   t;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Bi', 'Bi', c('Dh', 'Ai'), [s0=[arg('Dh',1,s0)], s1=[arg('Dh',1,s1)], s2=[arg('Dh',1,s2),arg('Ai',2,s0),arg('Ai',2,s1),arg('Ai',2,s2)], s3=[arg('Ai',2,s3)], s4=[arg('Ai',2,s4)]]).

%% AM --> Cz   BX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case --> /Been,Have   Been;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AM', 'AM', c('Cz', 'BX'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('BX',2,s0),arg('BX',2,s1),arg('BX',2,s2)], s3=[arg('BX',2,s3)]]).

%% AM --> Dk   CT   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case --> /ven,Have   ven;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AM', 'AM', c('Dk', 'CT'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('CT',2,s0),arg('CT',2,s1),arg('CT',2,s2)], s3=[arg('CT',2,s3)]]).

%% AN --> Cz   BY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-f --> /Been,Have   Been;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AN', 'AN', c('Cz', 'BY'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('BY',2,s0),arg('BY',2,s1),arg('BY',2,s2)], s3=[arg('BY',2,s3)], s4=[arg('BY',2,s4)]]).

%% AN --> Dk   Aj   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-f --> /ven,Have   ven;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AN', 'AN', c('Dk', 'Aj'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('Aj',2,s0),arg('Aj',2,s1),arg('Aj',2,s2)], s3=[arg('Aj',2,s3)], s4=[arg('Aj',2,s4)]]).

%% AO --> Cz   BZ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-f;-wh_rel --> /Been,Have   Been;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AO', 'AO', c('Cz', 'BZ'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('BZ',2,s0),arg('BZ',2,s1),arg('BZ',2,s2)], s3=[arg('BZ',2,s3)], s4=[arg('BZ',2,s4)], s5=[arg('BZ',2,s5)]]).

%% AO --> Dk   w   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-f;-wh_rel --> /ven,Have   ven;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AO', 'AO', c('Dk', 'w'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('w',2,s0),arg('w',2,s1),arg('w',2,s2)], s3=[arg('w',2,s3)], s4=[arg('w',2,s4)], s5=[arg('w',2,s5)]]).

%% AP --> Cz   Ba   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-wh_rel --> /Been,Have   Been;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AP', 'AP', c('Cz', 'Ba'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('Ba',2,s0),arg('Ba',2,s1),arg('Ba',2,s2)], s3=[arg('Ba',2,s3)], s4=[arg('Ba',2,s4)]]).

%% AP --> Dk   Ak   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-wh_rel --> /ven,Have   ven;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AP', 'AP', c('Dk', 'Ak'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('Ak',2,s0),arg('Ak',2,s1),arg('Ak',2,s2)], s3=[arg('Ak',2,s3)], s4=[arg('Ak',2,s4)]]).

%% AQ --> Cz   Bb   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-wh_rel;-f --> /Been,Have   Been;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AQ', 'AQ', c('Cz', 'Bb'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('Bb',2,s0),arg('Bb',2,s1),arg('Bb',2,s2)], s3=[arg('Bb',2,s3)], s4=[arg('Bb',2,s4)], s5=[arg('Bb',2,s5)]]).

%% AQ --> Dk   x   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-wh_rel;-f --> /ven,Have   ven;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('AQ', 'AQ', c('Dk', 'x'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('x',2,s0),arg('x',2,s1),arg('x',2,s2)], s3=[arg('x',2,s3)], s4=[arg('x',2,s4)], s5=[arg('x',2,s5)]]).

%% AR --> Cz   Bc   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case,-wh_rel --> /Been,Have   Been;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AR', 'AR', c('Cz', 'Bc'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('Bc',2,s0),arg('Bc',2,s1),arg('Bc',2,s2)], s3=[arg('Bc',2,s3)]]).

%% AR --> Dk   CU   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case,-wh_rel --> /ven,Have   ven;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AR', 'AR', c('Dk', 'CU'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('CU',2,s0),arg('CU',2,s1),arg('CU',2,s2)], s3=[arg('CU',2,s3)]]).

%% AT --> Cz   Bd   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case,-wh_rel;-f --> /Been,Have   Been;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AT', 'AT', c('Cz', 'Bd'), [s0=[arg('Cz',1,s0)], s1=[arg('Cz',1,s1)], s2=[arg('Cz',1,s2),arg('Bd',2,s0),arg('Bd',2,s1),arg('Bd',2,s2)], s3=[arg('Bd',2,s3)], s4=[arg('Bd',2,s4)]]).

%% AT --> Dk   CV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case,-wh_rel;-f --> /ven,Have   ven;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AT', 'AT', c('Dk', 'CV'), [s0=[arg('Dk',1,s0)], s1=[arg('Dk',1,s1)], s2=[arg('Dk',1,s2),arg('CV',2,s0),arg('CV',2,s1),arg('CV',2,s2)], s3=[arg('CV',2,s3)], s4=[arg('CV',2,s4)]]).

%% j --> Cy   AF   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /Be,Modal   Be;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('j', 'j', c('Cy', 'AF'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AF',2,s0),arg('AF',2,s1),arg('AF',2,s2)], s3=[arg('AF',2,s3)]]).

%% j --> DC   AM   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /Have,Modal   Have;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('j', 'j', c('DC', 'AM'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AM',2,s0),arg('AM',2,s1),arg('AM',2,s2)], s3=[arg('AM',2,s3)]]).

%% j --> Dc   CB   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /little_v,Modal   little_v;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('j', 'j', c('Dc', 'CB'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('CB',2,s0),arg('CB',2,s1),arg('CB',2,s2)], s3=[arg('CB',2,s3)]]).

%% k --> Cy   AG   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /Be,Modal   Be;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('k', 'k', c('Cy', 'AG'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AG',2,s0),arg('AG',2,s1),arg('AG',2,s2)], s3=[arg('AG',2,s3)], s4=[arg('AG',2,s4)]]).

%% k --> DC   AN   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /Have,Modal   Have;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('k', 'k', c('DC', 'AN'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AN',2,s0),arg('AN',2,s1),arg('AN',2,s2)], s3=[arg('AN',2,s3)], s4=[arg('AN',2,s4)]]).

%% k --> Dc   Ae   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /little_v,Modal   little_v;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('k', 'k', c('Dc', 'Ae'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('Ae',2,s0),arg('Ae',2,s1),arg('Ae',2,s2)], s3=[arg('Ae',2,s3)], s4=[arg('Ae',2,s4)]]).

%% l --> Cy   AH   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /Be,Modal   Be;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('l', 'l', c('Cy', 'AH'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AH',2,s0),arg('AH',2,s1),arg('AH',2,s2)], s3=[arg('AH',2,s3)], s4=[arg('AH',2,s4)], s5=[arg('AH',2,s5)]]).

%% l --> DC   AO   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /Have,Modal   Have;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('l', 'l', c('DC', 'AO'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AO',2,s0),arg('AO',2,s1),arg('AO',2,s2)], s3=[arg('AO',2,s3)], s4=[arg('AO',2,s4)], s5=[arg('AO',2,s5)]]).

%% l --> Dc   u   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /little_v,Modal   little_v;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('l', 'l', c('Dc', 'u'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('u',2,s0),arg('u',2,s1),arg('u',2,s2)], s3=[arg('u',2,s3)], s4=[arg('u',2,s4)], s5=[arg('u',2,s5)]]).

%% m --> Cy   AI   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /Be,Modal   Be;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('m', 'm', c('Cy', 'AI'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AI',2,s0),arg('AI',2,s1),arg('AI',2,s2)], s3=[arg('AI',2,s3)], s4=[arg('AI',2,s4)]]).

%% m --> DC   AP   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /Have,Modal   Have;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('m', 'm', c('DC', 'AP'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AP',2,s0),arg('AP',2,s1),arg('AP',2,s2)], s3=[arg('AP',2,s3)], s4=[arg('AP',2,s4)]]).

%% m --> Dc   Af   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /little_v,Modal   little_v;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('m', 'm', c('Dc', 'Af'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('Af',2,s0),arg('Af',2,s1),arg('Af',2,s2)], s3=[arg('Af',2,s3)], s4=[arg('Af',2,s4)]]).

%% n --> Cy   AJ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /Be,Modal   Be;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('n', 'n', c('Cy', 'AJ'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AJ',2,s0),arg('AJ',2,s1),arg('AJ',2,s2)], s3=[arg('AJ',2,s3)], s4=[arg('AJ',2,s4)], s5=[arg('AJ',2,s5)]]).

%% n --> DC   AQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /Have,Modal   Have;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('n', 'n', c('DC', 'AQ'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AQ',2,s0),arg('AQ',2,s1),arg('AQ',2,s2)], s3=[arg('AQ',2,s3)], s4=[arg('AQ',2,s4)], s5=[arg('AQ',2,s5)]]).

%% n --> Dc   v   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /little_v,Modal   little_v;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('n', 'n', c('Dc', 'v'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('v',2,s0),arg('v',2,s1),arg('v',2,s2)], s3=[arg('v',2,s3)], s4=[arg('v',2,s4)], s5=[arg('v',2,s5)]]).

%% o --> Cy   AK   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /Be,Modal   Be;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('o', 'o', c('Cy', 'AK'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AK',2,s0),arg('AK',2,s1),arg('AK',2,s2)], s3=[arg('AK',2,s3)]]).

%% o --> DC   AR   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /Have,Modal   Have;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('o', 'o', c('DC', 'AR'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AR',2,s0),arg('AR',2,s1),arg('AR',2,s2)], s3=[arg('AR',2,s3)]]).

%% o --> Dc   CC   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /little_v,Modal   little_v;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('o', 'o', c('Dc', 'CC'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('CC',2,s0),arg('CC',2,s1),arg('CC',2,s2)], s3=[arg('CC',2,s3)]]).

%% p --> Cy   AL   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /Be,Modal   Be;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('p', 'p', c('Cy', 'AL'), [s0=[arg('Cy',1,s0)], s1=[arg('Cy',1,s1)], s2=[arg('Cy',1,s2),arg('AL',2,s0),arg('AL',2,s1),arg('AL',2,s2)], s3=[arg('AL',2,s3)], s4=[arg('AL',2,s4)]]).

%% p --> DC   AT   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /Have,Modal   Have;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('p', 'p', c('DC', 'AT'), [s0=[arg('DC',1,s0)], s1=[arg('DC',1,s1)], s2=[arg('DC',1,s2),arg('AT',2,s0),arg('AT',2,s1),arg('AT',2,s2)], s3=[arg('AT',2,s3)], s4=[arg('AT',2,s4)]]).

%% p --> Dc   CD   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /little_v,Modal   little_v;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('p', 'p', c('Dc', 'CD'), [s0=[arg('Dc',1,s0)], s1=[arg('Dc',1,s1)], s2=[arg('Dc',1,s2),arg('CD',2,s0),arg('CD',2,s1),arg('CD',2,s2)], s3=[arg('CD',2,s3)], s4=[arg('CD',2,s4)]]).

%% AU --> De   W   [0,0][0,1][0,2;1,0;1,1;1,2]	(* Num --> /n,Num   n   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('AU', 'AU', c('De', 'W'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2),arg('W',2,s0),arg('W',2,s1),arg('W',2,s2)]]).

%% AU --> Dn   W   [0,0][0,2][1,0;1,1;0,1;1,2]	(* Num --> n==>,Num   n   [0,0][0,2][1,0;1,1;0,1;1,2] *)
rule('AU', 'AU', c('Dn', 'W'), [s0=[arg('Dn',1,s0)], s1=[arg('Dn',1,s2)], s2=[arg('W',2,s0),arg('W',2,s1),arg('Dn',1,s1),arg('W',2,s2)]]).

%% q --> De   X   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Num;-f --> /n,Num   n;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('q', 'q', c('De', 'X'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2),arg('X',2,s0),arg('X',2,s1),arg('X',2,s2)], s3=[arg('X',2,s3)]]).

%% q --> De   Ag   [0,0][0,1][0,2][1,0;1,1;1,2]	(* Num;-f --> /n,Num   n,-f   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('q', 'q', c('De', 'Ag'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2)], s3=[arg('Ag',2,s0),arg('Ag',2,s1),arg('Ag',2,s2)]]).

%% q --> Dn   X   [0,0][0,2][1,0;1,1;0,1;1,2][1,3]	(* Num;-f --> n==>,Num   n;-f   [0,0][0,2][1,0;1,1;0,1;1,2][1,3] *)
rule('q', 'q', c('Dn', 'X'), [s0=[arg('Dn',1,s0)], s1=[arg('Dn',1,s2)], s2=[arg('X',2,s0),arg('X',2,s1),arg('Dn',1,s1),arg('X',2,s2)], s3=[arg('X',2,s3)]]).

%% AV --> De   I   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Num;-f;-wh_rel --> /n,Num   n;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AV', 'AV', c('De', 'I'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2),arg('I',2,s0),arg('I',2,s1),arg('I',2,s2)], s3=[arg('I',2,s3)], s4=[arg('I',2,s4)]]).

%% AV --> Dn   I   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4]	(* Num;-f;-wh_rel --> n==>,Num   n;-f;-wh_rel   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4] *)
rule('AV', 'AV', c('Dn', 'I'), [s0=[arg('Dn',1,s0)], s1=[arg('Dn',1,s2)], s2=[arg('I',2,s0),arg('I',2,s1),arg('Dn',1,s1),arg('I',2,s2)], s3=[arg('I',2,s3)], s4=[arg('I',2,s4)]]).

%% AW --> De   Y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Num;-wh_rel --> /n,Num   n;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('AW', 'AW', c('De', 'Y'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2),arg('Y',2,s0),arg('Y',2,s1),arg('Y',2,s2)], s3=[arg('Y',2,s3)]]).

%% AW --> Dn   Y   [0,0][0,2][1,0;1,1;0,1;1,2][1,3]	(* Num;-wh_rel --> n==>,Num   n;-wh_rel   [0,0][0,2][1,0;1,1;0,1;1,2][1,3] *)
rule('AW', 'AW', c('Dn', 'Y'), [s0=[arg('Dn',1,s0)], s1=[arg('Dn',1,s2)], s2=[arg('Y',2,s0),arg('Y',2,s1),arg('Dn',1,s1),arg('Y',2,s2)], s3=[arg('Y',2,s3)]]).

%% AX --> De   J   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Num;-wh_rel;-f --> /n,Num   n;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('AX', 'AX', c('De', 'J'), [s0=[arg('De',1,s0)], s1=[arg('De',1,s1)], s2=[arg('De',1,s2),arg('J',2,s0),arg('J',2,s1),arg('J',2,s2)], s3=[arg('J',2,s3)], s4=[arg('J',2,s4)]]).

%% AX --> Dn   J   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4]	(* Num;-wh_rel;-f --> n==>,Num   n;-wh_rel;-f   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4] *)
rule('AX', 'AX', c('Dn', 'J'), [s0=[arg('Dn',1,s0)], s1=[arg('Dn',1,s2)], s2=[arg('J',2,s0),arg('J',2,s1),arg('Dn',1,s1),arg('J',2,s2)], s3=[arg('J',2,s3)], s4=[arg('J',2,s4)]]).

%% Bj --> CZ   [0,3;0,0][0,1][0,2]	(* Pfor --> +case,Pfor;-case   [0,3;0,0][0,1][0,2] *)
rule('Bj', 'Bj', c('CZ'), [s0=[arg('CZ',1,s3),arg('CZ',1,s0)], s1=[arg('CZ',1,s1)], s2=[arg('CZ',1,s2)]]).

%% Bk --> Ca   [0,3;0,0][0,1][0,2][0,4]	(* Pfor;-f --> +case,Pfor;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('Bk', 'Bk', c('Ca'), [s0=[arg('Ca',1,s3),arg('Ca',1,s0)], s1=[arg('Ca',1,s1)], s2=[arg('Ca',1,s2)], s3=[arg('Ca',1,s4)]]).

%% Bl --> Cb   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pfor;-f;-wh_rel --> +case,Pfor;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('Bl', 'Bl', c('Cb'), [s0=[arg('Cb',1,s3),arg('Cb',1,s0)], s1=[arg('Cb',1,s1)], s2=[arg('Cb',1,s2)], s3=[arg('Cb',1,s4)], s4=[arg('Cb',1,s5)]]).

%% AY --> Cc   [0,3;0,0][0,1][0,2][0,4]	(* Pfor;-wh_rel --> +case,Pfor;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
rule('AY', 'AY', c('Cc'), [s0=[arg('Cc',1,s3),arg('Cc',1,s0)], s1=[arg('Cc',1,s1)], s2=[arg('Cc',1,s2)], s3=[arg('Cc',1,s4)]]).

%% AY --> Ce   [0,0][0,1][0,2][0,3]	(* Pfor;-wh_rel --> +case,Pfor;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
rule('AY', 'AY', c('Ce'), [s0=[arg('Ce',1,s0)], s1=[arg('Ce',1,s1)], s2=[arg('Ce',1,s2)], s3=[arg('Ce',1,s3)]]).

%% Bm --> Cd   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pfor;-wh_rel;-f --> +case,Pfor;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('Bm', 'Bm', c('Cd'), [s0=[arg('Cd',1,s3),arg('Cd',1,s0)], s1=[arg('Cd',1,s1)], s2=[arg('Cd',1,s2)], s3=[arg('Cd',1,s4)], s4=[arg('Cd',1,s5)]]).

%% Bn --> Cf   [0,3;0,0][0,1][0,2]	(* Pto --> +case,Pto;-case   [0,3;0,0][0,1][0,2] *)
rule('Bn', 'Bn', c('Cf'), [s0=[arg('Cf',1,s3),arg('Cf',1,s0)], s1=[arg('Cf',1,s1)], s2=[arg('Cf',1,s2)]]).

%% Bo --> Cg   [0,3;0,0][0,1][0,2][0,4]	(* Pto;-f --> +case,Pto;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('Bo', 'Bo', c('Cg'), [s0=[arg('Cg',1,s3),arg('Cg',1,s0)], s1=[arg('Cg',1,s1)], s2=[arg('Cg',1,s2)], s3=[arg('Cg',1,s4)]]).

%% Bp --> Ch   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pto;-f;-wh_rel --> +case,Pto;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('Bp', 'Bp', c('Ch'), [s0=[arg('Ch',1,s3),arg('Ch',1,s0)], s1=[arg('Ch',1,s1)], s2=[arg('Ch',1,s2)], s3=[arg('Ch',1,s4)], s4=[arg('Ch',1,s5)]]).

%% AZ --> Ci   [0,3;0,0][0,1][0,2][0,4]	(* Pto;-wh_rel --> +case,Pto;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
rule('AZ', 'AZ', c('Ci'), [s0=[arg('Ci',1,s3),arg('Ci',1,s0)], s1=[arg('Ci',1,s1)], s2=[arg('Ci',1,s2)], s3=[arg('Ci',1,s4)]]).

%% AZ --> Ck   [0,0][0,1][0,2][0,3]	(* Pto;-wh_rel --> +case,Pto;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
rule('AZ', 'AZ', c('Ck'), [s0=[arg('Ck',1,s0)], s1=[arg('Ck',1,s1)], s2=[arg('Ck',1,s2)], s3=[arg('Ck',1,s3)]]).

%% Bq --> Cj   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pto;-wh_rel;-f --> +case,Pto;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('Bq', 'Bq', c('Cj'), [s0=[arg('Cj',1,s3),arg('Cj',1,s0)], s1=[arg('Cj',1,s1)], s2=[arg('Cj',1,s2)], s3=[arg('Cj',1,s4)], s4=[arg('Cj',1,s5)]]).

%% Br --> Ap   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* a;-case --> \d,a   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Br', 'Br', c('Ap', 't'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Aa --> Ap   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* a;-case;-f --> \d,a   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Aa', 'Aa', c('Ap', 'Ad'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Aa --> EC   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case;-f --> \d,a;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Aa', 'Aa', c('EC', 't'), [s0=[arg('EC',1,s0)], s1=[arg('EC',1,s1)], s2=[arg('EC',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EC',1,s3)]]).

%% r --> Ap   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* a;-case;-f;-wh_rel --> \d,a   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('r', 'r', c('Ap', 'Bw'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% r --> EC   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* a;-case;-f;-wh_rel --> \d,a;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('r', 'r', c('EC', 'Bx'), [s0=[arg('EC',1,s0)], s1=[arg('EC',1,s1)], s2=[arg('EC',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('EC',1,s3)], s5=[arg('Bx',2,s3)]]).

%% r --> ED   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* a;-case;-f;-wh_rel --> \d,a;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('r', 'r', c('ED', 't'), [s0=[arg('ED',1,s0)], s1=[arg('ED',1,s1)], s2=[arg('ED',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('ED',1,s3)], s5=[arg('ED',1,s4)]]).

%% Ab --> Ap   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* a;-case;-wh_rel --> \d,a   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Ab', 'Ab', c('Ap', 'Bx'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Ab --> Aq   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case;-wh_rel --> \d,a;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Ab', 'Ab', c('Aq', 't'), [s0=[arg('Aq',1,s0)], s1=[arg('Aq',1,s1)], s2=[arg('Aq',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('Aq',1,s3)]]).

%% s --> Ap   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* a;-case;-wh_rel;-f --> \d,a   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('s', 's', c('Ap', 'By'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% s --> Aq   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* a;-case;-wh_rel;-f --> \d,a;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('s', 's', c('Aq', 'Ad'), [s0=[arg('Aq',1,s0)], s1=[arg('Aq',1,s1)], s2=[arg('Aq',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Aq',1,s3)], s5=[arg('Ad',2,s3)]]).

%% s --> EE   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* a;-case;-wh_rel;-f --> \d,a;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('s', 's', c('EE', 't'), [s0=[arg('EE',1,s0)], s1=[arg('EE',1,s1)], s2=[arg('EE',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EE',1,s3)], s5=[arg('EE',1,s4)]]).

%% Bs --> Ap   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* a;-case,-wh_rel --> \d,a   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Bs', 'Bs', c('Ap', 'Bz'), [s0=[arg('Ap',1,s0)], s1=[arg('Ap',1,s1)], s2=[arg('Ap',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% Bt --> EC   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case,-wh_rel;-f --> \d,a;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Bt', 'Bt', c('EC', 'Bz'), [s0=[arg('EC',1,s0)], s1=[arg('EC',1,s1)], s2=[arg('EC',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)], s4=[arg('EC',1,s3)]]).

%% Bu --> Di   CO   [0,0][0,1][0,2;1,0;1,1;1,2]	(* c --> /t,c   t   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('Bu', 'Bu', c('Di', 'CO'), [s0=[arg('Di',1,s0)], s1=[arg('Di',1,s1)], s2=[arg('Di',1,s2),arg('CO',2,s0),arg('CO',2,s1),arg('CO',2,s2)]]).

%% Bv --> Cu   [0,3;0,0][0,1][0,2]	(* c_rel --> +wh_rel,c_rel;-wh_rel   [0,3;0,0][0,1][0,2] *)
rule('Bv', 'Bv', c('Cu'), [s0=[arg('Cu',1,s3),arg('Cu',1,s0)], s1=[arg('Cu',1,s1)], s2=[arg('Cu',1,s2)]]).

%% Ac --> Ct   [0,4;0,0][0,1][0,2][0,3]	(* c_rel;-f --> +wh_rel,c_rel;-f;-wh_rel   [0,4;0,0][0,1][0,2][0,3] *)
rule('Ac', 'Ac', c('Ct'), [s0=[arg('Ct',1,s4),arg('Ct',1,s0)], s1=[arg('Ct',1,s1)], s2=[arg('Ct',1,s2)], s3=[arg('Ct',1,s3)]]).

%% Ac --> Cv   [0,3;0,0][0,1][0,2][0,4]	(* c_rel;-f --> +wh_rel,c_rel;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('Ac', 'Ac', c('Cv'), [s0=[arg('Cv',1,s3),arg('Cv',1,s0)], s1=[arg('Cv',1,s1)], s2=[arg('Cv',1,s2)], s3=[arg('Cv',1,s4)]]).

%% t --> DD   AU   [0,0][0,1][0,2;1,0;1,1;1,2]	(* d,-case --> /Num,d,-case   Num   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('t', 't', c('DD', 'AU'), [s0=[arg('DD',1,s0)], s1=[arg('DD',1,s1)], s2=[arg('DD',1,s2),arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2)]]).

%% t --> DH   Bv   [0,0][0,1][0,2;1,0;1,1;1,2]	(* d,-case --> /c_rel,d,-case   c_rel   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('t', 't', c('DH', 'Bv'), [s0=[arg('DH',1,s0)], s1=[arg('DH',1,s1)], s2=[arg('DH',1,s2),arg('Bv',2,s0),arg('Bv',2,s1),arg('Bv',2,s2)]]).

%% Ad --> DD   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-f --> /Num,d,-case   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Ad', 'Ad', c('DD', 'q'), [s0=[arg('DD',1,s0)], s1=[arg('DD',1,s1)], s2=[arg('DD',1,s2),arg('q',2,s0),arg('q',2,s1),arg('q',2,s2)], s3=[arg('q',2,s3)]]).

%% Ad --> DH   Ac   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-f --> /c_rel,d,-case   c_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Ad', 'Ad', c('DH', 'Ac'), [s0=[arg('DH',1,s0)], s1=[arg('DH',1,s1)], s2=[arg('DH',1,s2),arg('Ac',2,s0),arg('Ac',2,s1),arg('Ac',2,s2)], s3=[arg('Ac',2,s3)]]).

%% Bw --> DD   AV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* d,-case;-f;-wh_rel --> /Num,d,-case   Num;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Bw', 'Bw', c('DD', 'AV'), [s0=[arg('DD',1,s0)], s1=[arg('DD',1,s1)], s2=[arg('DD',1,s2),arg('AV',2,s0),arg('AV',2,s1),arg('AV',2,s2)], s3=[arg('AV',2,s3)], s4=[arg('AV',2,s4)]]).

%% Bx --> DD   AW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-wh_rel --> /Num,d,-case   Num;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Bx', 'Bx', c('DD', 'AW'), [s0=[arg('DD',1,s0)], s1=[arg('DD',1,s1)], s2=[arg('DD',1,s2),arg('AW',2,s0),arg('AW',2,s1),arg('AW',2,s2)], s3=[arg('AW',2,s3)]]).

%% By --> DD   AX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* d,-case;-wh_rel;-f --> /Num,d,-case   Num;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('By', 'By', c('DD', 'AX'), [s0=[arg('DD',1,s0)], s1=[arg('DD',1,s1)], s2=[arg('DD',1,s2),arg('AX',2,s0),arg('AX',2,s1),arg('AX',2,s2)], s3=[arg('AX',2,s3)], s4=[arg('AX',2,s4)]]).

%% Bz --> Cs   [0,3;0,0][0,1][0,2]	(* d,-case,-wh_rel --> +f,d,-case,-wh_rel;-f   [0,3;0,0][0,1][0,2] *)
rule('Bz', 'Bz', c('Cs'), [s0=[arg('Cs',1,s3),arg('Cs',1,s0)], s1=[arg('Cs',1,s1)], s2=[arg('Cs',1,s2)]]).

%% CB --> DI   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* little_v;-case --> /d,little_v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CB', 'CB', c('DI', 't'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Ae --> DI   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* little_v;-case;-f --> /d,little_v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Ae', 'Ae', c('DI', 'Ad'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Ae --> DJ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case;-f --> /d,little_v;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Ae', 'Ae', c('DJ', 't'), [s0=[arg('DJ',1,s0)], s1=[arg('DJ',1,s1)], s2=[arg('DJ',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DJ',1,s3)]]).

%% u --> DI   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* little_v;-case;-f;-wh_rel --> /d,little_v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('u', 'u', c('DI', 'Bw'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% u --> DJ   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* little_v;-case;-f;-wh_rel --> /d,little_v;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('u', 'u', c('DJ', 'Bx'), [s0=[arg('DJ',1,s0)], s1=[arg('DJ',1,s1)], s2=[arg('DJ',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('DJ',1,s3)], s5=[arg('Bx',2,s3)]]).

%% u --> DK   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* little_v;-case;-f;-wh_rel --> /d,little_v;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('u', 'u', c('DK', 't'), [s0=[arg('DK',1,s0)], s1=[arg('DK',1,s1)], s2=[arg('DK',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DK',1,s3)], s5=[arg('DK',1,s4)]]).

%% Af --> DI   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* little_v;-case;-wh_rel --> /d,little_v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Af', 'Af', c('DI', 'Bx'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Af --> DL   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case;-wh_rel --> /d,little_v;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Af', 'Af', c('DL', 't'), [s0=[arg('DL',1,s0)], s1=[arg('DL',1,s1)], s2=[arg('DL',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DL',1,s3)]]).

%% v --> DI   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* little_v;-case;-wh_rel;-f --> /d,little_v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('v', 'v', c('DI', 'By'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% v --> DL   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* little_v;-case;-wh_rel;-f --> /d,little_v;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('v', 'v', c('DL', 'Ad'), [s0=[arg('DL',1,s0)], s1=[arg('DL',1,s1)], s2=[arg('DL',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('DL',1,s3)], s5=[arg('Ad',2,s3)]]).

%% v --> DM   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* little_v;-case;-wh_rel;-f --> /d,little_v;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('v', 'v', c('DM', 't'), [s0=[arg('DM',1,s0)], s1=[arg('DM',1,s1)], s2=[arg('DM',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DM',1,s3)], s5=[arg('DM',1,s4)]]).

%% CC --> DI   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* little_v;-case,-wh_rel --> /d,little_v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CC', 'CC', c('DI', 'Bz'), [s0=[arg('DI',1,s0)], s1=[arg('DI',1,s1)], s2=[arg('DI',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% CD --> DJ   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case,-wh_rel;-f --> /d,little_v;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('CD', 'CD', c('DJ', 'Bz'), [s0=[arg('DJ',1,s0)], s1=[arg('DJ',1,s1)], s2=[arg('DJ',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)], s4=[arg('DJ',1,s3)]]).

%% W --> AE   W   [0,0;0,1;0,2;1,0][1,1][1,2]	(* n --> A   n   [0,0;0,1;0,2;1,0][1,1][1,2] *)
rule('W', 'W', c('AE', 'W'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('W',2,s0)], s1=[arg('W',2,s1)], s2=[arg('W',2,s2)]]).

%% W --> DA   Be   [0,0][0,1][0,2;1,0;1,1;1,2]	(* n --> /Ce,n   Ce   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('W', 'W', c('DA', 'Be'), [s0=[arg('DA',1,s0)], s1=[arg('DA',1,s1)], s2=[arg('DA',1,s2),arg('Be',2,s0),arg('Be',2,s1),arg('Be',2,s2)]]).

%% W --> Dx   AU   [1,0;1,1;1,2;0,0][0,1][0,2]	(* n --> \Num,n   Num   [1,0;1,1;1,2;0,0][0,1][0,2] *)
rule('W', 'W', c('Dx', 'AU'), [s0=[arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2),arg('Dx',1,s0)], s1=[arg('Dx',1,s1)], s2=[arg('Dx',1,s2)]]).

%% X --> AE   X   [0,0;0,1;0,2;1,0][1,1][1,2][1,3]	(* n;-f --> A   n;-f   [0,0;0,1;0,2;1,0][1,1][1,2][1,3] *)
rule('X', 'X', c('AE', 'X'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('X',2,s0)], s1=[arg('X',2,s1)], s2=[arg('X',2,s2)], s3=[arg('X',2,s3)]]).

%% X --> DA   Bf   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* n;-f --> /Ce,n   Ce;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('X', 'X', c('DA', 'Bf'), [s0=[arg('DA',1,s0)], s1=[arg('DA',1,s1)], s2=[arg('DA',1,s2),arg('Bf',2,s0),arg('Bf',2,s1),arg('Bf',2,s2)], s3=[arg('Bf',2,s3)]]).

%% X --> Dx   q   [1,0;1,1;1,2;0,0][0,1][0,2][1,3]	(* n;-f --> \Num,n   Num;-f   [1,0;1,1;1,2;0,0][0,1][0,2][1,3] *)
rule('X', 'X', c('Dx', 'q'), [s0=[arg('q',2,s0),arg('q',2,s1),arg('q',2,s2),arg('Dx',1,s0)], s1=[arg('Dx',1,s1)], s2=[arg('Dx',1,s2)], s3=[arg('q',2,s3)]]).

%% X --> Dy   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3]	(* n;-f --> \Num,n;-f   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3] *)
rule('X', 'X', c('Dy', 'AU'), [s0=[arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2),arg('Dy',1,s0)], s1=[arg('Dy',1,s1)], s2=[arg('Dy',1,s2)], s3=[arg('Dy',1,s3)]]).

%% I --> AE   I   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4]	(* n;-f;-wh_rel --> A   n;-f;-wh_rel   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4] *)
rule('I', 'I', c('AE', 'I'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('I',2,s0)], s1=[arg('I',2,s1)], s2=[arg('I',2,s2)], s3=[arg('I',2,s3)], s4=[arg('I',2,s4)]]).

%% I --> DA   Bg   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* n;-f;-wh_rel --> /Ce,n   Ce;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('I', 'I', c('DA', 'Bg'), [s0=[arg('DA',1,s0)], s1=[arg('DA',1,s1)], s2=[arg('DA',1,s2),arg('Bg',2,s0),arg('Bg',2,s1),arg('Bg',2,s2)], s3=[arg('Bg',2,s3)], s4=[arg('Bg',2,s4)]]).

%% I --> Dx   AV   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4]	(* n;-f;-wh_rel --> \Num,n   Num;-f;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4] *)
rule('I', 'I', c('Dx', 'AV'), [s0=[arg('AV',2,s0),arg('AV',2,s1),arg('AV',2,s2),arg('Dx',1,s0)], s1=[arg('Dx',1,s1)], s2=[arg('Dx',1,s2)], s3=[arg('AV',2,s3)], s4=[arg('AV',2,s4)]]).

%% I --> Dy   AW   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3]	(* n;-f;-wh_rel --> \Num,n;-f   Num;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3] *)
rule('I', 'I', c('Dy', 'AW'), [s0=[arg('AW',2,s0),arg('AW',2,s1),arg('AW',2,s2),arg('Dy',1,s0)], s1=[arg('Dy',1,s1)], s2=[arg('Dy',1,s2)], s3=[arg('Dy',1,s3)], s4=[arg('AW',2,s3)]]).

%% I --> Dz   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4]	(* n;-f;-wh_rel --> \Num,n;-f;-wh_rel   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4] *)
rule('I', 'I', c('Dz', 'AU'), [s0=[arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2),arg('Dz',1,s0)], s1=[arg('Dz',1,s1)], s2=[arg('Dz',1,s2)], s3=[arg('Dz',1,s3)], s4=[arg('Dz',1,s4)]]).

%% Y --> AE   Y   [0,0;0,1;0,2;1,0][1,1][1,2][1,3]	(* n;-wh_rel --> A   n;-wh_rel   [0,0;0,1;0,2;1,0][1,1][1,2][1,3] *)
rule('Y', 'Y', c('AE', 'Y'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('Y',2,s0)], s1=[arg('Y',2,s1)], s2=[arg('Y',2,s2)], s3=[arg('Y',2,s3)]]).

%% Y --> DA   Bh   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* n;-wh_rel --> /Ce,n   Ce;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Y', 'Y', c('DA', 'Bh'), [s0=[arg('DA',1,s0)], s1=[arg('DA',1,s1)], s2=[arg('DA',1,s2),arg('Bh',2,s0),arg('Bh',2,s1),arg('Bh',2,s2)], s3=[arg('Bh',2,s3)]]).

%% Y --> Dx   AW   [1,0;1,1;1,2;0,0][0,1][0,2][1,3]	(* n;-wh_rel --> \Num,n   Num;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][1,3] *)
rule('Y', 'Y', c('Dx', 'AW'), [s0=[arg('AW',2,s0),arg('AW',2,s1),arg('AW',2,s2),arg('Dx',1,s0)], s1=[arg('Dx',1,s1)], s2=[arg('Dx',1,s2)], s3=[arg('AW',2,s3)]]).

%% Y --> EA   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3]	(* n;-wh_rel --> \Num,n;-wh_rel   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3] *)
rule('Y', 'Y', c('EA', 'AU'), [s0=[arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2),arg('EA',1,s0)], s1=[arg('EA',1,s1)], s2=[arg('EA',1,s2)], s3=[arg('EA',1,s3)]]).

%% J --> AE   J   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4]	(* n;-wh_rel;-f --> A   n;-wh_rel;-f   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4] *)
rule('J', 'J', c('AE', 'J'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('J',2,s0)], s1=[arg('J',2,s1)], s2=[arg('J',2,s2)], s3=[arg('J',2,s3)], s4=[arg('J',2,s4)]]).

%% J --> DA   Bi   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* n;-wh_rel;-f --> /Ce,n   Ce;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('J', 'J', c('DA', 'Bi'), [s0=[arg('DA',1,s0)], s1=[arg('DA',1,s1)], s2=[arg('DA',1,s2),arg('Bi',2,s0),arg('Bi',2,s1),arg('Bi',2,s2)], s3=[arg('Bi',2,s3)], s4=[arg('Bi',2,s4)]]).

%% J --> Dx   AX   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4]	(* n;-wh_rel;-f --> \Num,n   Num;-wh_rel;-f   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4] *)
rule('J', 'J', c('Dx', 'AX'), [s0=[arg('AX',2,s0),arg('AX',2,s1),arg('AX',2,s2),arg('Dx',1,s0)], s1=[arg('Dx',1,s1)], s2=[arg('Dx',1,s2)], s3=[arg('AX',2,s3)], s4=[arg('AX',2,s4)]]).

%% J --> EA   q   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3]	(* n;-wh_rel;-f --> \Num,n;-wh_rel   Num;-f   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3] *)
rule('J', 'J', c('EA', 'q'), [s0=[arg('q',2,s0),arg('q',2,s1),arg('q',2,s2),arg('EA',1,s0)], s1=[arg('EA',1,s1)], s2=[arg('EA',1,s2)], s3=[arg('EA',1,s3)], s4=[arg('q',2,s3)]]).

%% J --> EB   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4]	(* n;-wh_rel;-f --> \Num,n;-wh_rel;-f   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4] *)
rule('J', 'J', c('EB', 'AU'), [s0=[arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2),arg('EB',1,s0)], s1=[arg('EB',1,s1)], s2=[arg('EB',1,s2)], s3=[arg('EB',1,s3)], s4=[arg('EB',1,s4)]]).

%% Ag --> AE   Ag   [0,0;0,1;0,2;1,0][1,1][1,2]	(* n,-f --> A   n,-f   [0,0;0,1;0,2;1,0][1,1][1,2] *)
rule('Ag', 'Ag', c('AE', 'Ag'), [s0=[arg('AE',1,s0),arg('AE',1,s1),arg('AE',1,s2),arg('Ag',2,s0)], s1=[arg('Ag',2,s1)], s2=[arg('Ag',2,s2)]]).

%% CE --> Dr   Bj   [0,0][1,1;0,1][0,2;1,0;1,2]	(* p_for --> =>Pfor,p_for   Pfor   [0,0][1,1;0,1][0,2;1,0;1,2] *)
rule('CE', 'CE', c('Dr', 'Bj'), [s0=[arg('Dr',1,s0)], s1=[arg('Bj',2,s1),arg('Dr',1,s1)], s2=[arg('Dr',1,s2),arg('Bj',2,s0),arg('Bj',2,s2)]]).

%% CF --> Dr   Bk   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_for;-f --> =>Pfor,p_for   Pfor;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('CF', 'CF', c('Dr', 'Bk'), [s0=[arg('Dr',1,s0)], s1=[arg('Bk',2,s1),arg('Dr',1,s1)], s2=[arg('Dr',1,s2),arg('Bk',2,s0),arg('Bk',2,s2)], s3=[arg('Bk',2,s3)]]).

%% CG --> Dr   Bl   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_for;-f;-wh_rel --> =>Pfor,p_for   Pfor;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('CG', 'CG', c('Dr', 'Bl'), [s0=[arg('Dr',1,s0)], s1=[arg('Bl',2,s1),arg('Dr',1,s1)], s2=[arg('Dr',1,s2),arg('Bl',2,s0),arg('Bl',2,s2)], s3=[arg('Bl',2,s3)], s4=[arg('Bl',2,s4)]]).

%% CH --> Dr   AY   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_for;-wh_rel --> =>Pfor,p_for   Pfor;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('CH', 'CH', c('Dr', 'AY'), [s0=[arg('Dr',1,s0)], s1=[arg('AY',2,s1),arg('Dr',1,s1)], s2=[arg('Dr',1,s2),arg('AY',2,s0),arg('AY',2,s2)], s3=[arg('AY',2,s3)]]).

%% CI --> Dr   Bm   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_for;-wh_rel;-f --> =>Pfor,p_for   Pfor;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('CI', 'CI', c('Dr', 'Bm'), [s0=[arg('Dr',1,s0)], s1=[arg('Bm',2,s1),arg('Dr',1,s1)], s2=[arg('Dr',1,s2),arg('Bm',2,s0),arg('Bm',2,s2)], s3=[arg('Bm',2,s3)], s4=[arg('Bm',2,s4)]]).

%% CJ --> Ds   Bn   [0,0][1,1;0,1][0,2;1,0;1,2]	(* p_to --> =>Pto,p_to   Pto   [0,0][1,1;0,1][0,2;1,0;1,2] *)
rule('CJ', 'CJ', c('Ds', 'Bn'), [s0=[arg('Ds',1,s0)], s1=[arg('Bn',2,s1),arg('Ds',1,s1)], s2=[arg('Ds',1,s2),arg('Bn',2,s0),arg('Bn',2,s2)]]).

%% CK --> Ds   Bo   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_to;-f --> =>Pto,p_to   Pto;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('CK', 'CK', c('Ds', 'Bo'), [s0=[arg('Ds',1,s0)], s1=[arg('Bo',2,s1),arg('Ds',1,s1)], s2=[arg('Ds',1,s2),arg('Bo',2,s0),arg('Bo',2,s2)], s3=[arg('Bo',2,s3)]]).

%% CL --> Ds   Bp   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_to;-f;-wh_rel --> =>Pto,p_to   Pto;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('CL', 'CL', c('Ds', 'Bp'), [s0=[arg('Ds',1,s0)], s1=[arg('Bp',2,s1),arg('Ds',1,s1)], s2=[arg('Ds',1,s2),arg('Bp',2,s0),arg('Bp',2,s2)], s3=[arg('Bp',2,s3)], s4=[arg('Bp',2,s4)]]).

%% CM --> Ds   AZ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_to;-wh_rel --> =>Pto,p_to   Pto;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('CM', 'CM', c('Ds', 'AZ'), [s0=[arg('Ds',1,s0)], s1=[arg('AZ',2,s1),arg('Ds',1,s1)], s2=[arg('Ds',1,s2),arg('AZ',2,s0),arg('AZ',2,s2)], s3=[arg('AZ',2,s3)]]).

%% CN --> Ds   Bq   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_to;-wh_rel;-f --> =>Pto,p_to   Pto;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('CN', 'CN', c('Ds', 'Bq'), [s0=[arg('Ds',1,s0)], s1=[arg('Bq',2,s1),arg('Ds',1,s1)], s2=[arg('Ds',1,s2),arg('Bq',2,s0),arg('Bq',2,s2)], s3=[arg('Bq',2,s3)], s4=[arg('Bq',2,s4)]]).

%% CO --> M   [0,3;0,0][0,1][0,2]	(* t --> +case,t;-case   [0,3;0,0][0,1][0,2] *)
rule('CO', 'CO', c('M'), [s0=[arg('M',1,s3),arg('M',1,s0)], s1=[arg('M',1,s1)], s2=[arg('M',1,s2)]]).

%% CP --> N   [0,3;0,0][0,1][0,2][0,4]	(* t;-f --> +case,t;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('CP', 'CP', c('N'), [s0=[arg('N',1,s3),arg('N',1,s0)], s1=[arg('N',1,s1)], s2=[arg('N',1,s2)], s3=[arg('N',1,s4)]]).

%% CQ --> O   [0,3;0,0][0,1][0,2][0,4][0,5]	(* t;-f;-wh_rel --> +case,t;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('CQ', 'CQ', c('O'), [s0=[arg('O',1,s3),arg('O',1,s0)], s1=[arg('O',1,s1)], s2=[arg('O',1,s2)], s3=[arg('O',1,s4)], s4=[arg('O',1,s5)]]).

%% Ah --> P   [0,3;0,0][0,1][0,2][0,4]	(* t;-wh_rel --> +case,t;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
rule('Ah', 'Ah', c('P'), [s0=[arg('P',1,s3),arg('P',1,s0)], s1=[arg('P',1,s1)], s2=[arg('P',1,s2)], s3=[arg('P',1,s4)]]).

%% Ah --> R   [0,0][0,1][0,2][0,3]	(* t;-wh_rel --> +case,t;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
rule('Ah', 'Ah', c('R'), [s0=[arg('R',1,s0)], s1=[arg('R',1,s1)], s2=[arg('R',1,s2)], s3=[arg('R',1,s3)]]).

%% Ai --> Q   [0,3;0,0][0,1][0,2][0,4][0,5]	(* t;-wh_rel;-f --> +case,t;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('Ai', 'Ai', c('Q'), [s0=[arg('Q',1,s3),arg('Q',1,s0)], s1=[arg('Q',1,s1)], s2=[arg('Q',1,s2)], s3=[arg('Q',1,s4)], s4=[arg('Q',1,s5)]]).

%% Ai --> T   [0,0][0,1][0,2][0,3][0,4]	(* t;-wh_rel;-f --> +case,t;-case,-wh_rel;-f   [0,0][0,1][0,2][0,3][0,4] *)
rule('Ai', 'Ai', c('T'), [s0=[arg('T',1,s0)], s1=[arg('T',1,s1)], s2=[arg('T',1,s2)], s3=[arg('T',1,s3)], s4=[arg('T',1,s4)]]).

%% H --> CR   H   [1,0][1,1][1,2;0,0;0,1;0,2]	(* v --> tmp   v   [1,0][1,1][1,2;0,0;0,1;0,2] *)
rule('H', 'H', c('CR', 'H'), [s0=[arg('H',2,s0)], s1=[arg('H',2,s1)], s2=[arg('H',2,s2),arg('CR',1,s0),arg('CR',1,s1),arg('CR',1,s2)]]).

%% H --> An   [0,3;0,0][0,1][0,2]	(* v --> +case,v;-case   [0,3;0,0][0,1][0,2] *)
rule('H', 'H', c('An'), [s0=[arg('An',1,s3),arg('An',1,s0)], s1=[arg('An',1,s1)], s2=[arg('An',1,s2)]]).

%% H --> Cw   AE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /A,v   A   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('H', 'H', c('Cw', 'AE'), [s0=[arg('Cw',1,s0)], s1=[arg('Cw',1,s1)], s2=[arg('Cw',1,s2),arg('AE',2,s0),arg('AE',2,s1),arg('AE',2,s2)]]).

%% H --> DB   Be   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /Ce,v   Ce   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('H', 'H', c('DB', 'Be'), [s0=[arg('DB',1,s0)], s1=[arg('DB',1,s1)], s2=[arg('DB',1,s2),arg('Be',2,s0),arg('Be',2,s1),arg('Be',2,s2)]]).

%% H --> Df   CE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /p_for,v   p_for   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('H', 'H', c('Df', 'CE'), [s0=[arg('Df',1,s0)], s1=[arg('Df',1,s1)], s2=[arg('Df',1,s2),arg('CE',2,s0),arg('CE',2,s1),arg('CE',2,s2)]]).

%% Z --> CR   Z   [1,0][1,1][1,2;0,0;0,1;0,2][1,3]	(* v;-f --> tmp   v;-f   [1,0][1,1][1,2;0,0;0,1;0,2][1,3] *)
rule('Z', 'Z', c('CR', 'Z'), [s0=[arg('Z',2,s0)], s1=[arg('Z',2,s1)], s2=[arg('Z',2,s2),arg('CR',1,s0),arg('CR',1,s1),arg('CR',1,s2)], s3=[arg('Z',2,s3)]]).

%% Z --> AA   [0,3;0,0][0,1][0,2][0,4]	(* v;-f --> +case,v;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('Z', 'Z', c('AA'), [s0=[arg('AA',1,s3),arg('AA',1,s0)], s1=[arg('AA',1,s1)], s2=[arg('AA',1,s2)], s3=[arg('AA',1,s4)]]).

%% Z --> DB   Bf   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-f --> /Ce,v   Ce;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Z', 'Z', c('DB', 'Bf'), [s0=[arg('DB',1,s0)], s1=[arg('DB',1,s1)], s2=[arg('DB',1,s2),arg('Bf',2,s0),arg('Bf',2,s1),arg('Bf',2,s2)], s3=[arg('Bf',2,s3)]]).

%% Z --> Df   CF   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-f --> /p_for,v   p_for;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Z', 'Z', c('Df', 'CF'), [s0=[arg('Df',1,s0)], s1=[arg('Df',1,s1)], s2=[arg('Df',1,s2),arg('CF',2,s0),arg('CF',2,s1),arg('CF',2,s2)], s3=[arg('CF',2,s3)]]).

%% a --> CR   a   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4]	(* v;-f;-wh_rel --> tmp   v;-f;-wh_rel   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4] *)
rule('a', 'a', c('CR', 'a'), [s0=[arg('a',2,s0)], s1=[arg('a',2,s1)], s2=[arg('a',2,s2),arg('CR',1,s0),arg('CR',1,s1),arg('CR',1,s2)], s3=[arg('a',2,s3)], s4=[arg('a',2,s4)]]).

%% a --> b   [0,3;0,0][0,1][0,2][0,4][0,5]	(* v;-f;-wh_rel --> +case,v;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('a', 'a', c('b'), [s0=[arg('b',1,s3),arg('b',1,s0)], s1=[arg('b',1,s1)], s2=[arg('b',1,s2)], s3=[arg('b',1,s4)], s4=[arg('b',1,s5)]]).

%% a --> DB   Bg   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-f;-wh_rel --> /Ce,v   Ce;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('a', 'a', c('DB', 'Bg'), [s0=[arg('DB',1,s0)], s1=[arg('DB',1,s1)], s2=[arg('DB',1,s2),arg('Bg',2,s0),arg('Bg',2,s1),arg('Bg',2,s2)], s3=[arg('Bg',2,s3)], s4=[arg('Bg',2,s4)]]).

%% a --> Df   CG   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-f;-wh_rel --> /p_for,v   p_for;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('a', 'a', c('Df', 'CG'), [s0=[arg('Df',1,s0)], s1=[arg('Df',1,s1)], s2=[arg('Df',1,s2),arg('CG',2,s0),arg('CG',2,s1),arg('CG',2,s2)], s3=[arg('CG',2,s3)], s4=[arg('CG',2,s4)]]).

%% K --> CR   K   [1,0][1,1][1,2;0,0;0,1;0,2][1,3]	(* v;-wh_rel --> tmp   v;-wh_rel   [1,0][1,1][1,2;0,0;0,1;0,2][1,3] *)
rule('K', 'K', c('CR', 'K'), [s0=[arg('K',2,s0)], s1=[arg('K',2,s1)], s2=[arg('K',2,s2),arg('CR',1,s0),arg('CR',1,s1),arg('CR',1,s2)], s3=[arg('K',2,s3)]]).

%% K --> AB   [0,3;0,0][0,1][0,2][0,4]	(* v;-wh_rel --> +case,v;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
rule('K', 'K', c('AB'), [s0=[arg('AB',1,s3),arg('AB',1,s0)], s1=[arg('AB',1,s1)], s2=[arg('AB',1,s2)], s3=[arg('AB',1,s4)]]).

%% K --> Ao   [0,0][0,1][0,2][0,3]	(* v;-wh_rel --> +case,v;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
rule('K', 'K', c('Ao'), [s0=[arg('Ao',1,s0)], s1=[arg('Ao',1,s1)], s2=[arg('Ao',1,s2)], s3=[arg('Ao',1,s3)]]).

%% K --> DB   Bh   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-wh_rel --> /Ce,v   Ce;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('K', 'K', c('DB', 'Bh'), [s0=[arg('DB',1,s0)], s1=[arg('DB',1,s1)], s2=[arg('DB',1,s2),arg('Bh',2,s0),arg('Bh',2,s1),arg('Bh',2,s2)], s3=[arg('Bh',2,s3)]]).

%% K --> Df   CH   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-wh_rel --> /p_for,v   p_for;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('K', 'K', c('Df', 'CH'), [s0=[arg('Df',1,s0)], s1=[arg('Df',1,s1)], s2=[arg('Df',1,s2),arg('CH',2,s0),arg('CH',2,s1),arg('CH',2,s2)], s3=[arg('CH',2,s3)]]).

%% L --> CR   L   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4]	(* v;-wh_rel;-f --> tmp   v;-wh_rel;-f   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4] *)
rule('L', 'L', c('CR', 'L'), [s0=[arg('L',2,s0)], s1=[arg('L',2,s1)], s2=[arg('L',2,s2),arg('CR',1,s0),arg('CR',1,s1),arg('CR',1,s2)], s3=[arg('L',2,s3)], s4=[arg('L',2,s4)]]).

%% L --> c   [0,3;0,0][0,1][0,2][0,4][0,5]	(* v;-wh_rel;-f --> +case,v;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('L', 'L', c('c'), [s0=[arg('c',1,s3),arg('c',1,s0)], s1=[arg('c',1,s1)], s2=[arg('c',1,s2)], s3=[arg('c',1,s4)], s4=[arg('c',1,s5)]]).

%% L --> Cl   [0,0][0,1][0,2][0,3][0,4]	(* v;-wh_rel;-f --> +case,v;-case,-wh_rel;-f   [0,0][0,1][0,2][0,3][0,4] *)
rule('L', 'L', c('Cl'), [s0=[arg('Cl',1,s0)], s1=[arg('Cl',1,s1)], s2=[arg('Cl',1,s2)], s3=[arg('Cl',1,s3)], s4=[arg('Cl',1,s4)]]).

%% L --> DB   Bi   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-wh_rel;-f --> /Ce,v   Ce;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('L', 'L', c('DB', 'Bi'), [s0=[arg('DB',1,s0)], s1=[arg('DB',1,s1)], s2=[arg('DB',1,s2),arg('Bi',2,s0),arg('Bi',2,s1),arg('Bi',2,s2)], s3=[arg('Bi',2,s3)], s4=[arg('Bi',2,s4)]]).

%% L --> Df   CI   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-wh_rel;-f --> /p_for,v   p_for;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('L', 'L', c('Df', 'CI'), [s0=[arg('Df',1,s0)], s1=[arg('Df',1,s1)], s2=[arg('Df',1,s2),arg('CI',2,s0),arg('CI',2,s1),arg('CI',2,s2)], s3=[arg('CI',2,s3)], s4=[arg('CI',2,s4)]]).

%% CT --> DN   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ven;-case --> /d,ven   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CT', 'CT', c('DN', 't'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Aj --> DN   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ven;-case;-f --> /d,ven   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Aj', 'Aj', c('DN', 'Ad'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Aj --> DO   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case;-f --> /d,ven;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Aj', 'Aj', c('DO', 't'), [s0=[arg('DO',1,s0)], s1=[arg('DO',1,s1)], s2=[arg('DO',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DO',1,s3)]]).

%% w --> DN   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ven;-case;-f;-wh_rel --> /d,ven   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('w', 'w', c('DN', 'Bw'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% w --> DO   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ven;-case;-f;-wh_rel --> /d,ven;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('w', 'w', c('DO', 'Bx'), [s0=[arg('DO',1,s0)], s1=[arg('DO',1,s1)], s2=[arg('DO',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('DO',1,s3)], s5=[arg('Bx',2,s3)]]).

%% w --> DP   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ven;-case;-f;-wh_rel --> /d,ven;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('w', 'w', c('DP', 't'), [s0=[arg('DP',1,s0)], s1=[arg('DP',1,s1)], s2=[arg('DP',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DP',1,s3)], s5=[arg('DP',1,s4)]]).

%% Ak --> DN   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ven;-case;-wh_rel --> /d,ven   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Ak', 'Ak', c('DN', 'Bx'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Ak --> DQ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case;-wh_rel --> /d,ven;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Ak', 'Ak', c('DQ', 't'), [s0=[arg('DQ',1,s0)], s1=[arg('DQ',1,s1)], s2=[arg('DQ',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DQ',1,s3)]]).

%% x --> DN   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ven;-case;-wh_rel;-f --> /d,ven   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('x', 'x', c('DN', 'By'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% x --> DQ   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ven;-case;-wh_rel;-f --> /d,ven;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('x', 'x', c('DQ', 'Ad'), [s0=[arg('DQ',1,s0)], s1=[arg('DQ',1,s1)], s2=[arg('DQ',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('DQ',1,s3)], s5=[arg('Ad',2,s3)]]).

%% x --> DR   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ven;-case;-wh_rel;-f --> /d,ven;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('x', 'x', c('DR', 't'), [s0=[arg('DR',1,s0)], s1=[arg('DR',1,s1)], s2=[arg('DR',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DR',1,s3)], s5=[arg('DR',1,s4)]]).

%% CU --> DN   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ven;-case,-wh_rel --> /d,ven   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CU', 'CU', c('DN', 'Bz'), [s0=[arg('DN',1,s0)], s1=[arg('DN',1,s1)], s2=[arg('DN',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% CV --> DO   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case,-wh_rel;-f --> /d,ven;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('CV', 'CV', c('DO', 'Bz'), [s0=[arg('DO',1,s0)], s1=[arg('DO',1,s1)], s2=[arg('DO',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)], s4=[arg('DO',1,s3)]]).

%% CW --> DT   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ving;-case --> /d,ving   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CW', 'CW', c('DT', 't'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Al --> DT   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ving;-case;-f --> /d,ving   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Al', 'Al', c('DT', 'Ad'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Al --> DU   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case;-f --> /d,ving;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Al', 'Al', c('DU', 't'), [s0=[arg('DU',1,s0)], s1=[arg('DU',1,s1)], s2=[arg('DU',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DU',1,s3)]]).

%% y --> DT   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ving;-case;-f;-wh_rel --> /d,ving   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('y', 'y', c('DT', 'Bw'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% y --> DU   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ving;-case;-f;-wh_rel --> /d,ving;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('y', 'y', c('DU', 'Bx'), [s0=[arg('DU',1,s0)], s1=[arg('DU',1,s1)], s2=[arg('DU',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('DU',1,s3)], s5=[arg('Bx',2,s3)]]).

%% y --> DV   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ving;-case;-f;-wh_rel --> /d,ving;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('y', 'y', c('DV', 't'), [s0=[arg('DV',1,s0)], s1=[arg('DV',1,s1)], s2=[arg('DV',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DV',1,s3)], s5=[arg('DV',1,s4)]]).

%% Am --> DT   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ving;-case;-wh_rel --> /d,ving   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Am', 'Am', c('DT', 'Bx'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Am --> DW   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case;-wh_rel --> /d,ving;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Am', 'Am', c('DW', 't'), [s0=[arg('DW',1,s0)], s1=[arg('DW',1,s1)], s2=[arg('DW',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DW',1,s3)]]).

%% z --> DT   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ving;-case;-wh_rel;-f --> /d,ving   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('z', 'z', c('DT', 'By'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% z --> DW   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ving;-case;-wh_rel;-f --> /d,ving;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('z', 'z', c('DW', 'Ad'), [s0=[arg('DW',1,s0)], s1=[arg('DW',1,s1)], s2=[arg('DW',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('DW',1,s3)], s5=[arg('Ad',2,s3)]]).

%% z --> DX   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ving;-case;-wh_rel;-f --> /d,ving;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('z', 'z', c('DX', 't'), [s0=[arg('DX',1,s0)], s1=[arg('DX',1,s1)], s2=[arg('DX',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('DX',1,s3)], s5=[arg('DX',1,s4)]]).

%% CX --> DT   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ving;-case,-wh_rel --> /d,ving   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CX', 'CX', c('DT', 'Bz'), [s0=[arg('DT',1,s0)], s1=[arg('DT',1,s1)], s2=[arg('DT',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% CY --> DU   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case,-wh_rel;-f --> /d,ving;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('CY', 'CY', c('DU', 'Bz'), [s0=[arg('DU',1,s0)], s1=[arg('DU',1,s1)], s2=[arg('DU',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)], s4=[arg('DU',1,s3)]]).

%% CZ --> DY   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pfor;-case --> /d,+case,Pfor   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('CZ', 'CZ', c('DY', 't'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Ca --> DY   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pfor;-case;-f --> /d,+case,Pfor   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Ca', 'Ca', c('DY', 'Ad'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Cb --> DY   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pfor;-case;-f;-wh_rel --> /d,+case,Pfor   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Cb', 'Cb', c('DY', 'Bw'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% Cc --> DY   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pfor;-case;-wh_rel --> /d,+case,Pfor   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Cc', 'Cc', c('DY', 'Bx'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Cd --> DY   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pfor;-case;-wh_rel;-f --> /d,+case,Pfor   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Cd', 'Cd', c('DY', 'By'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% Ce --> DY   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pfor;-case,-wh_rel --> /d,+case,Pfor   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Ce', 'Ce', c('DY', 'Bz'), [s0=[arg('DY',1,s0)], s1=[arg('DY',1,s1)], s2=[arg('DY',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% Cf --> DZ   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pto;-case --> /d,+case,Pto   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Cf', 'Cf', c('DZ', 't'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Cg --> DZ   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pto;-case;-f --> /d,+case,Pto   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Cg', 'Cg', c('DZ', 'Ad'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Ch --> DZ   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pto;-case;-f;-wh_rel --> /d,+case,Pto   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Ch', 'Ch', c('DZ', 'Bw'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% Ci --> DZ   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pto;-case;-wh_rel --> /d,+case,Pto   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Ci', 'Ci', c('DZ', 'Bx'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Cj --> DZ   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pto;-case;-wh_rel;-f --> /d,+case,Pto   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Cj', 'Cj', c('DZ', 'By'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% Ck --> DZ   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pto;-case,-wh_rel --> /d,+case,Pto   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Ck', 'Ck', c('DZ', 'Bz'), [s0=[arg('DZ',1,s0)], s1=[arg('DZ',1,s1)], s2=[arg('DZ',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% M --> Dd   CB   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +case,t;-case --> /little_v,+case,t   little_v;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('M', 'M', c('Dd', 'CB'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('CB',2,s0),arg('CB',2,s1),arg('CB',2,s2)], s3=[arg('CB',2,s3)]]).

%% M --> Do   AF   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Be,+case,t   Be;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('M', 'M', c('Do', 'AF'), [s0=[arg('Do',1,s0)], s1=[arg('AF',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AF',2,s0),arg('AF',2,s2)], s3=[arg('AF',2,s3)]]).

%% M --> Dp   AM   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Have,+case,t   Have;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('M', 'M', c('Dp', 'AM'), [s0=[arg('Dp',1,s0)], s1=[arg('AM',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AM',2,s0),arg('AM',2,s2)], s3=[arg('AM',2,s3)]]).

%% M --> Dq   j   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Modal,+case,t   Modal;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('M', 'M', c('Dq', 'j'), [s0=[arg('Dq',1,s0)], s1=[arg('j',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('j',2,s0),arg('j',2,s2)], s3=[arg('j',2,s3)]]).

%% M --> Dt   CB   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>little_v,+case,t   little_v;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('M', 'M', c('Dt', 'CB'), [s0=[arg('Dt',1,s0)], s1=[arg('CB',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('CB',2,s0),arg('CB',2,s2)], s3=[arg('CB',2,s3)]]).

%% N --> Dd   Ae   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case;-f --> /little_v,+case,t   little_v;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('N', 'N', c('Dd', 'Ae'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('Ae',2,s0),arg('Ae',2,s1),arg('Ae',2,s2)], s3=[arg('Ae',2,s3)], s4=[arg('Ae',2,s4)]]).

%% N --> Do   AG   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Be,+case,t   Be;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('N', 'N', c('Do', 'AG'), [s0=[arg('Do',1,s0)], s1=[arg('AG',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AG',2,s0),arg('AG',2,s2)], s3=[arg('AG',2,s3)], s4=[arg('AG',2,s4)]]).

%% N --> Dp   AN   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Have,+case,t   Have;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('N', 'N', c('Dp', 'AN'), [s0=[arg('Dp',1,s0)], s1=[arg('AN',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AN',2,s0),arg('AN',2,s2)], s3=[arg('AN',2,s3)], s4=[arg('AN',2,s4)]]).

%% N --> Dq   k   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Modal,+case,t   Modal;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('N', 'N', c('Dq', 'k'), [s0=[arg('Dq',1,s0)], s1=[arg('k',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('k',2,s0),arg('k',2,s2)], s3=[arg('k',2,s3)], s4=[arg('k',2,s4)]]).

%% N --> Dt   Ae   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>little_v,+case,t   little_v;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('N', 'N', c('Dt', 'Ae'), [s0=[arg('Dt',1,s0)], s1=[arg('Ae',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('Ae',2,s0),arg('Ae',2,s2)], s3=[arg('Ae',2,s3)], s4=[arg('Ae',2,s4)]]).

%% O --> Dd   u   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> /little_v,+case,t   little_v;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('O', 'O', c('Dd', 'u'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('u',2,s0),arg('u',2,s1),arg('u',2,s2)], s3=[arg('u',2,s3)], s4=[arg('u',2,s4)], s5=[arg('u',2,s5)]]).

%% O --> Do   AH   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Be,+case,t   Be;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('O', 'O', c('Do', 'AH'), [s0=[arg('Do',1,s0)], s1=[arg('AH',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AH',2,s0),arg('AH',2,s2)], s3=[arg('AH',2,s3)], s4=[arg('AH',2,s4)], s5=[arg('AH',2,s5)]]).

%% O --> Dp   AO   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Have,+case,t   Have;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('O', 'O', c('Dp', 'AO'), [s0=[arg('Dp',1,s0)], s1=[arg('AO',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AO',2,s0),arg('AO',2,s2)], s3=[arg('AO',2,s3)], s4=[arg('AO',2,s4)], s5=[arg('AO',2,s5)]]).

%% O --> Dq   l   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Modal,+case,t   Modal;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('O', 'O', c('Dq', 'l'), [s0=[arg('Dq',1,s0)], s1=[arg('l',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('l',2,s0),arg('l',2,s2)], s3=[arg('l',2,s3)], s4=[arg('l',2,s4)], s5=[arg('l',2,s5)]]).

%% O --> Dt   u   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>little_v,+case,t   little_v;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('O', 'O', c('Dt', 'u'), [s0=[arg('Dt',1,s0)], s1=[arg('u',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('u',2,s0),arg('u',2,s2)], s3=[arg('u',2,s3)], s4=[arg('u',2,s4)], s5=[arg('u',2,s5)]]).

%% P --> Dd   Af   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> /little_v,+case,t   little_v;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('P', 'P', c('Dd', 'Af'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('Af',2,s0),arg('Af',2,s1),arg('Af',2,s2)], s3=[arg('Af',2,s3)], s4=[arg('Af',2,s4)]]).

%% P --> Do   AI   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Be,+case,t   Be;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('P', 'P', c('Do', 'AI'), [s0=[arg('Do',1,s0)], s1=[arg('AI',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AI',2,s0),arg('AI',2,s2)], s3=[arg('AI',2,s3)], s4=[arg('AI',2,s4)]]).

%% P --> Dp   AP   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Have,+case,t   Have;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('P', 'P', c('Dp', 'AP'), [s0=[arg('Dp',1,s0)], s1=[arg('AP',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AP',2,s0),arg('AP',2,s2)], s3=[arg('AP',2,s3)], s4=[arg('AP',2,s4)]]).

%% P --> Dq   m   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Modal,+case,t   Modal;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('P', 'P', c('Dq', 'm'), [s0=[arg('Dq',1,s0)], s1=[arg('m',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('m',2,s0),arg('m',2,s2)], s3=[arg('m',2,s3)], s4=[arg('m',2,s4)]]).

%% P --> Dt   Af   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>little_v,+case,t   little_v;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('P', 'P', c('Dt', 'Af'), [s0=[arg('Dt',1,s0)], s1=[arg('Af',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('Af',2,s0),arg('Af',2,s2)], s3=[arg('Af',2,s3)], s4=[arg('Af',2,s4)]]).

%% Q --> Dd   v   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> /little_v,+case,t   little_v;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
rule('Q', 'Q', c('Dd', 'v'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('v',2,s0),arg('v',2,s1),arg('v',2,s2)], s3=[arg('v',2,s3)], s4=[arg('v',2,s4)], s5=[arg('v',2,s5)]]).

%% Q --> Do   AJ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Be,+case,t   Be;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('Q', 'Q', c('Do', 'AJ'), [s0=[arg('Do',1,s0)], s1=[arg('AJ',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AJ',2,s0),arg('AJ',2,s2)], s3=[arg('AJ',2,s3)], s4=[arg('AJ',2,s4)], s5=[arg('AJ',2,s5)]]).

%% Q --> Dp   AQ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Have,+case,t   Have;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('Q', 'Q', c('Dp', 'AQ'), [s0=[arg('Dp',1,s0)], s1=[arg('AQ',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AQ',2,s0),arg('AQ',2,s2)], s3=[arg('AQ',2,s3)], s4=[arg('AQ',2,s4)], s5=[arg('AQ',2,s5)]]).

%% Q --> Dq   n   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Modal,+case,t   Modal;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('Q', 'Q', c('Dq', 'n'), [s0=[arg('Dq',1,s0)], s1=[arg('n',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('n',2,s0),arg('n',2,s2)], s3=[arg('n',2,s3)], s4=[arg('n',2,s4)], s5=[arg('n',2,s5)]]).

%% Q --> Dt   v   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>little_v,+case,t   little_v;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
rule('Q', 'Q', c('Dt', 'v'), [s0=[arg('Dt',1,s0)], s1=[arg('v',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('v',2,s0),arg('v',2,s2)], s3=[arg('v',2,s3)], s4=[arg('v',2,s4)], s5=[arg('v',2,s5)]]).

%% R --> Dd   CC   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +case,t;-case,-wh_rel --> /little_v,+case,t   little_v;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('R', 'R', c('Dd', 'CC'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('CC',2,s0),arg('CC',2,s1),arg('CC',2,s2)], s3=[arg('CC',2,s3)]]).

%% R --> Do   AK   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Be,+case,t   Be;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('R', 'R', c('Do', 'AK'), [s0=[arg('Do',1,s0)], s1=[arg('AK',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AK',2,s0),arg('AK',2,s2)], s3=[arg('AK',2,s3)]]).

%% R --> Dp   AR   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Have,+case,t   Have;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('R', 'R', c('Dp', 'AR'), [s0=[arg('Dp',1,s0)], s1=[arg('AR',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AR',2,s0),arg('AR',2,s2)], s3=[arg('AR',2,s3)]]).

%% R --> Dq   o   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Modal,+case,t   Modal;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('R', 'R', c('Dq', 'o'), [s0=[arg('Dq',1,s0)], s1=[arg('o',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('o',2,s0),arg('o',2,s2)], s3=[arg('o',2,s3)]]).

%% R --> Dt   CC   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>little_v,+case,t   little_v;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('R', 'R', c('Dt', 'CC'), [s0=[arg('Dt',1,s0)], s1=[arg('CC',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('CC',2,s0),arg('CC',2,s2)], s3=[arg('CC',2,s3)]]).

%% T --> Dd   CD   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> /little_v,+case,t   little_v;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('T', 'T', c('Dd', 'CD'), [s0=[arg('Dd',1,s0)], s1=[arg('Dd',1,s1)], s2=[arg('Dd',1,s2),arg('CD',2,s0),arg('CD',2,s1),arg('CD',2,s2)], s3=[arg('CD',2,s3)], s4=[arg('CD',2,s4)]]).

%% T --> Do   AL   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Be,+case,t   Be;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('T', 'T', c('Do', 'AL'), [s0=[arg('Do',1,s0)], s1=[arg('AL',2,s1),arg('Do',1,s1)], s2=[arg('Do',1,s2),arg('AL',2,s0),arg('AL',2,s2)], s3=[arg('AL',2,s3)], s4=[arg('AL',2,s4)]]).

%% T --> Dp   AT   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Have,+case,t   Have;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('T', 'T', c('Dp', 'AT'), [s0=[arg('Dp',1,s0)], s1=[arg('AT',2,s1),arg('Dp',1,s1)], s2=[arg('Dp',1,s2),arg('AT',2,s0),arg('AT',2,s2)], s3=[arg('AT',2,s3)], s4=[arg('AT',2,s4)]]).

%% T --> Dq   p   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Modal,+case,t   Modal;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('T', 'T', c('Dq', 'p'), [s0=[arg('Dq',1,s0)], s1=[arg('p',2,s1),arg('Dq',1,s1)], s2=[arg('Dq',1,s2),arg('p',2,s0),arg('p',2,s2)], s3=[arg('p',2,s3)], s4=[arg('p',2,s4)]]).

%% T --> Dt   CD   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>little_v,+case,t   little_v;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('T', 'T', c('Dt', 'CD'), [s0=[arg('Dt',1,s0)], s1=[arg('CD',2,s1),arg('Dt',1,s1)], s2=[arg('Dt',1,s2),arg('CD',2,s0),arg('CD',2,s2)], s3=[arg('CD',2,s3)], s4=[arg('CD',2,s4)]]).

%% An --> Da   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case --> /d,+case,v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('An', 'An', c('Da', 't'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% An --> EF   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case --> \d,+case,v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('An', 'An', c('EF', 't'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% AA --> Da   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-f --> /d,+case,v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('AA', 'AA', c('Da', 'Ad'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% AA --> EF   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-f --> \d,+case,v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('AA', 'AA', c('EF', 'Ad'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% AA --> EG   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case;-f --> \d,+case,v;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('AA', 'AA', c('EG', 't'), [s0=[arg('EG',1,s0)], s1=[arg('EG',1,s1)], s2=[arg('EG',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EG',1,s3)]]).

%% b --> Da   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-f;-wh_rel --> /d,+case,v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('b', 'b', c('Da', 'Bw'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% b --> EF   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('b', 'b', c('EF', 'Bw'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% b --> EG   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('b', 'b', c('EG', 'Bx'), [s0=[arg('EG',1,s0)], s1=[arg('EG',1,s1)], s2=[arg('EG',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('EG',1,s3)], s5=[arg('Bx',2,s3)]]).

%% b --> EH   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('b', 'b', c('EH', 't'), [s0=[arg('EH',1,s0)], s1=[arg('EH',1,s1)], s2=[arg('EH',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EH',1,s3)], s5=[arg('EH',1,s4)]]).

%% AB --> Da   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-wh_rel --> /d,+case,v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('AB', 'AB', c('Da', 'Bx'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% AB --> EF   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-wh_rel --> \d,+case,v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('AB', 'AB', c('EF', 'Bx'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% AB --> EI   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case;-wh_rel --> \d,+case,v;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('AB', 'AB', c('EI', 't'), [s0=[arg('EI',1,s0)], s1=[arg('EI',1,s1)], s2=[arg('EI',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EI',1,s3)]]).

%% c --> Da   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-wh_rel;-f --> /d,+case,v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('c', 'c', c('Da', 'By'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% c --> EF   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('c', 'c', c('EF', 'By'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% c --> EI   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
rule('c', 'c', c('EI', 'Ad'), [s0=[arg('EI',1,s0)], s1=[arg('EI',1,s1)], s2=[arg('EI',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('EI',1,s3)], s5=[arg('Ad',2,s3)]]).

%% c --> EJ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
rule('c', 'c', c('EJ', 't'), [s0=[arg('EJ',1,s0)], s1=[arg('EJ',1,s1)], s2=[arg('EJ',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)], s4=[arg('EJ',1,s3)], s5=[arg('EJ',1,s4)]]).

%% Ao --> Da   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case,-wh_rel --> /d,+case,v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Ao', 'Ao', c('Da', 'Bz'), [s0=[arg('Da',1,s0)], s1=[arg('Da',1,s1)], s2=[arg('Da',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% Ao --> EF   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case,-wh_rel --> \d,+case,v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Ao', 'Ao', c('EF', 'Bz'), [s0=[arg('EF',1,s0)], s1=[arg('EF',1,s1)], s2=[arg('EF',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% Cl --> EG   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case,-wh_rel;-f --> \d,+case,v;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
rule('Cl', 'Cl', c('EG', 'Bz'), [s0=[arg('EG',1,s0)], s1=[arg('EG',1,s1)], s2=[arg('EG',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)], s4=[arg('EG',1,s3)]]).

%% Cm --> Db   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,\d,a;-case --> /d,+case,\d,a   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Cm', 'Cm', c('Db', 't'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('t',2,s0),arg('t',2,s1),arg('t',2,s2)]]).

%% Cn --> Db   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,\d,a;-case;-f --> /d,+case,\d,a   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Cn', 'Cn', c('Db', 'Ad'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('Ad',2,s0),arg('Ad',2,s1),arg('Ad',2,s2)], s4=[arg('Ad',2,s3)]]).

%% Co --> Db   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,\d,a;-case;-f;-wh_rel --> /d,+case,\d,a   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Co', 'Co', c('Db', 'Bw'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('Bw',2,s0),arg('Bw',2,s1),arg('Bw',2,s2)], s4=[arg('Bw',2,s3)], s5=[arg('Bw',2,s4)]]).

%% Cp --> Db   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,\d,a;-case;-wh_rel --> /d,+case,\d,a   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
rule('Cp', 'Cp', c('Db', 'Bx'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('Bx',2,s0),arg('Bx',2,s1),arg('Bx',2,s2)], s4=[arg('Bx',2,s3)]]).

%% Cq --> Db   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,\d,a;-case;-wh_rel;-f --> /d,+case,\d,a   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
rule('Cq', 'Cq', c('Db', 'By'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('By',2,s0),arg('By',2,s1),arg('By',2,s2)], s4=[arg('By',2,s3)], s5=[arg('By',2,s4)]]).

%% Cr --> Db   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,\d,a;-case,-wh_rel --> /d,+case,\d,a   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
rule('Cr', 'Cr', c('Db', 'Bz'), [s0=[arg('Db',1,s0)], s1=[arg('Db',1,s1)], s2=[arg('Db',1,s2)], s3=[arg('Bz',2,s0),arg('Bz',2,s1),arg('Bz',2,s2)]]).

%% Cs --> DE   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +f,d,-case,-wh_rel;-f --> /Num,+f,d,-case,-wh_rel   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Cs', 'Cs', c('DE', 'q'), [s0=[arg('DE',1,s0)], s1=[arg('DE',1,s1)], s2=[arg('DE',1,s2),arg('q',2,s0),arg('q',2,s1),arg('q',2,s2)], s3=[arg('q',2,s3)]]).

%% Ct --> Dj   CQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +wh_rel,c_rel;-f;-wh_rel --> /t,+wh_rel,c_rel   t;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Ct', 'Ct', c('Dj', 'CQ'), [s0=[arg('Dj',1,s0)], s1=[arg('Dj',1,s1)], s2=[arg('Dj',1,s2),arg('CQ',2,s0),arg('CQ',2,s1),arg('CQ',2,s2)], s3=[arg('CQ',2,s3)], s4=[arg('CQ',2,s4)]]).

%% Cu --> Dj   Ah   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +wh_rel,c_rel;-wh_rel --> /t,+wh_rel,c_rel   t;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Cu', 'Cu', c('Dj', 'Ah'), [s0=[arg('Dj',1,s0)], s1=[arg('Dj',1,s1)], s2=[arg('Dj',1,s2),arg('Ah',2,s0),arg('Ah',2,s1),arg('Ah',2,s2)], s3=[arg('Ah',2,s3)]]).

%% Cv --> Dj   Ai   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +wh_rel,c_rel;-wh_rel;-f --> /t,+wh_rel,c_rel   t;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Cv', 'Cv', c('Dj', 'Ai'), [s0=[arg('Dj',1,s0)], s1=[arg('Dj',1,s1)], s2=[arg('Dj',1,s2),arg('Ai',2,s0),arg('Ai',2,s1),arg('Ai',2,s2)], s3=[arg('Ai',2,s3)], s4=[arg('Ai',2,s4)]]).

%% DI --> Du   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,little_v --> =>v,/d,little_v   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
rule('DI', 'DI', c('Du', 'H'), [s0=[arg('Du',1,s0)], s1=[arg('H',2,s1),arg('Du',1,s1)], s2=[arg('Du',1,s2),arg('H',2,s0),arg('H',2,s2)]]).

%% DJ --> Du   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,little_v;-f --> =>v,/d,little_v   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DJ', 'DJ', c('Du', 'Z'), [s0=[arg('Du',1,s0)], s1=[arg('Z',2,s1),arg('Du',1,s1)], s2=[arg('Du',1,s2),arg('Z',2,s0),arg('Z',2,s2)], s3=[arg('Z',2,s3)]]).

%% DK --> Du   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,little_v;-f;-wh_rel --> =>v,/d,little_v   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DK', 'DK', c('Du', 'a'), [s0=[arg('Du',1,s0)], s1=[arg('a',2,s1),arg('Du',1,s1)], s2=[arg('Du',1,s2),arg('a',2,s0),arg('a',2,s2)], s3=[arg('a',2,s3)], s4=[arg('a',2,s4)]]).

%% DL --> Du   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,little_v;-wh_rel --> =>v,/d,little_v   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DL', 'DL', c('Du', 'K'), [s0=[arg('Du',1,s0)], s1=[arg('K',2,s1),arg('Du',1,s1)], s2=[arg('Du',1,s2),arg('K',2,s0),arg('K',2,s2)], s3=[arg('K',2,s3)]]).

%% DM --> Du   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,little_v;-wh_rel;-f --> =>v,/d,little_v   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DM', 'DM', c('Du', 'L'), [s0=[arg('Du',1,s0)], s1=[arg('L',2,s1),arg('Du',1,s1)], s2=[arg('Du',1,s2),arg('L',2,s0),arg('L',2,s2)], s3=[arg('L',2,s3)], s4=[arg('L',2,s4)]]).

%% DN --> Dv   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,ven --> =>v,/d,ven   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
rule('DN', 'DN', c('Dv', 'H'), [s0=[arg('Dv',1,s0)], s1=[arg('H',2,s1),arg('Dv',1,s1)], s2=[arg('Dv',1,s2),arg('H',2,s0),arg('H',2,s2)]]).

%% DO --> Dv   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ven;-f --> =>v,/d,ven   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DO', 'DO', c('Dv', 'Z'), [s0=[arg('Dv',1,s0)], s1=[arg('Z',2,s1),arg('Dv',1,s1)], s2=[arg('Dv',1,s2),arg('Z',2,s0),arg('Z',2,s2)], s3=[arg('Z',2,s3)]]).

%% DP --> Dv   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ven;-f;-wh_rel --> =>v,/d,ven   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DP', 'DP', c('Dv', 'a'), [s0=[arg('Dv',1,s0)], s1=[arg('a',2,s1),arg('Dv',1,s1)], s2=[arg('Dv',1,s2),arg('a',2,s0),arg('a',2,s2)], s3=[arg('a',2,s3)], s4=[arg('a',2,s4)]]).

%% DQ --> Dv   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ven;-wh_rel --> =>v,/d,ven   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DQ', 'DQ', c('Dv', 'K'), [s0=[arg('Dv',1,s0)], s1=[arg('K',2,s1),arg('Dv',1,s1)], s2=[arg('Dv',1,s2),arg('K',2,s0),arg('K',2,s2)], s3=[arg('K',2,s3)]]).

%% DR --> Dv   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ven;-wh_rel;-f --> =>v,/d,ven   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DR', 'DR', c('Dv', 'L'), [s0=[arg('Dv',1,s0)], s1=[arg('L',2,s1),arg('Dv',1,s1)], s2=[arg('Dv',1,s2),arg('L',2,s0),arg('L',2,s2)], s3=[arg('L',2,s3)], s4=[arg('L',2,s4)]]).

%% DT --> Dw   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,ving --> =>v,/d,ving   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
rule('DT', 'DT', c('Dw', 'H'), [s0=[arg('Dw',1,s0)], s1=[arg('H',2,s1),arg('Dw',1,s1)], s2=[arg('Dw',1,s2),arg('H',2,s0),arg('H',2,s2)]]).

%% DU --> Dw   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ving;-f --> =>v,/d,ving   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DU', 'DU', c('Dw', 'Z'), [s0=[arg('Dw',1,s0)], s1=[arg('Z',2,s1),arg('Dw',1,s1)], s2=[arg('Dw',1,s2),arg('Z',2,s0),arg('Z',2,s2)], s3=[arg('Z',2,s3)]]).

%% DV --> Dw   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ving;-f;-wh_rel --> =>v,/d,ving   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DV', 'DV', c('Dw', 'a'), [s0=[arg('Dw',1,s0)], s1=[arg('a',2,s1),arg('Dw',1,s1)], s2=[arg('Dw',1,s2),arg('a',2,s0),arg('a',2,s2)], s3=[arg('a',2,s3)], s4=[arg('a',2,s4)]]).

%% DW --> Dw   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ving;-wh_rel --> =>v,/d,ving   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
rule('DW', 'DW', c('Dw', 'K'), [s0=[arg('Dw',1,s0)], s1=[arg('K',2,s1),arg('Dw',1,s1)], s2=[arg('Dw',1,s2),arg('K',2,s0),arg('K',2,s2)], s3=[arg('K',2,s3)]]).

%% DX --> Dw   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ving;-wh_rel;-f --> =>v,/d,ving   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
rule('DX', 'DX', c('Dw', 'L'), [s0=[arg('Dw',1,s0)], s1=[arg('L',2,s1),arg('Dw',1,s1)], s2=[arg('Dw',1,s2),arg('L',2,s0),arg('L',2,s2)], s3=[arg('L',2,s3)], s4=[arg('L',2,s4)]]).

%% Dx --> DF   AU   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \Num,n --> /Num,\Num,n   Num   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('Dx', 'Dx', c('DF', 'AU'), [s0=[arg('DF',1,s0)], s1=[arg('DF',1,s1)], s2=[arg('DF',1,s2),arg('AU',2,s0),arg('AU',2,s1),arg('AU',2,s2)]]).

%% Dy --> DF   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \Num,n;-f --> /Num,\Num,n   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('Dy', 'Dy', c('DF', 'q'), [s0=[arg('DF',1,s0)], s1=[arg('DF',1,s1)], s2=[arg('DF',1,s2),arg('q',2,s0),arg('q',2,s1),arg('q',2,s2)], s3=[arg('q',2,s3)]]).

%% Dz --> DF   AV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \Num,n;-f;-wh_rel --> /Num,\Num,n   Num;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('Dz', 'Dz', c('DF', 'AV'), [s0=[arg('DF',1,s0)], s1=[arg('DF',1,s1)], s2=[arg('DF',1,s2),arg('AV',2,s0),arg('AV',2,s1),arg('AV',2,s2)], s3=[arg('AV',2,s3)], s4=[arg('AV',2,s4)]]).

%% EA --> DF   AW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \Num,n;-wh_rel --> /Num,\Num,n   Num;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('EA', 'EA', c('DF', 'AW'), [s0=[arg('DF',1,s0)], s1=[arg('DF',1,s1)], s2=[arg('DF',1,s2),arg('AW',2,s0),arg('AW',2,s1),arg('AW',2,s2)], s3=[arg('AW',2,s3)]]).

%% EB --> DF   AX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \Num,n;-wh_rel;-f --> /Num,\Num,n   Num;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('EB', 'EB', c('DF', 'AX'), [s0=[arg('DF',1,s0)], s1=[arg('DF',1,s1)], s2=[arg('DF',1,s2),arg('AX',2,s0),arg('AX',2,s1),arg('AX',2,s2)], s3=[arg('AX',2,s3)], s4=[arg('AX',2,s4)]]).

%% Ap --> Cm   [0,3;0,0][0,1][0,2]	(* \d,a --> +case,\d,a;-case   [0,3;0,0][0,1][0,2] *)
rule('Ap', 'Ap', c('Cm'), [s0=[arg('Cm',1,s3),arg('Cm',1,s0)], s1=[arg('Cm',1,s1)], s2=[arg('Cm',1,s2)]]).

%% Ap --> Cx   AE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \d,a --> /A,\d,a   A   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('Ap', 'Ap', c('Cx', 'AE'), [s0=[arg('Cx',1,s0)], s1=[arg('Cx',1,s1)], s2=[arg('Cx',1,s2),arg('AE',2,s0),arg('AE',2,s1),arg('AE',2,s2)]]).

%% EC --> Cn   [0,3;0,0][0,1][0,2][0,4]	(* \d,a;-f --> +case,\d,a;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
rule('EC', 'EC', c('Cn'), [s0=[arg('Cn',1,s3),arg('Cn',1,s0)], s1=[arg('Cn',1,s1)], s2=[arg('Cn',1,s2)], s3=[arg('Cn',1,s4)]]).

%% ED --> Co   [0,3;0,0][0,1][0,2][0,4][0,5]	(* \d,a;-f;-wh_rel --> +case,\d,a;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('ED', 'ED', c('Co'), [s0=[arg('Co',1,s3),arg('Co',1,s0)], s1=[arg('Co',1,s1)], s2=[arg('Co',1,s2)], s3=[arg('Co',1,s4)], s4=[arg('Co',1,s5)]]).

%% Aq --> Cp   [0,3;0,0][0,1][0,2][0,4]	(* \d,a;-wh_rel --> +case,\d,a;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
rule('Aq', 'Aq', c('Cp'), [s0=[arg('Cp',1,s3),arg('Cp',1,s0)], s1=[arg('Cp',1,s1)], s2=[arg('Cp',1,s2)], s3=[arg('Cp',1,s4)]]).

%% Aq --> Cr   [0,0][0,1][0,2][0,3]	(* \d,a;-wh_rel --> +case,\d,a;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
rule('Aq', 'Aq', c('Cr'), [s0=[arg('Cr',1,s0)], s1=[arg('Cr',1,s1)], s2=[arg('Cr',1,s2)], s3=[arg('Cr',1,s3)]]).

%% EE --> Cq   [0,3;0,0][0,1][0,2][0,4][0,5]	(* \d,a;-wh_rel;-f --> +case,\d,a;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
rule('EE', 'EE', c('Cq'), [s0=[arg('Cq',1,s3),arg('Cq',1,s0)], s1=[arg('Cq',1,s1)], s2=[arg('Cq',1,s2)], s3=[arg('Cq',1,s4)], s4=[arg('Cq',1,s5)]]).

%% EF --> Dg   CJ   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \d,+case,v --> /p_to,\d,+case,v   p_to   [0,0][0,1][0,2;1,0;1,1;1,2] *)
rule('EF', 'EF', c('Dg', 'CJ'), [s0=[arg('Dg',1,s0)], s1=[arg('Dg',1,s1)], s2=[arg('Dg',1,s2),arg('CJ',2,s0),arg('CJ',2,s1),arg('CJ',2,s2)]]).

%% EG --> Dg   CK   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \d,+case,v;-f --> /p_to,\d,+case,v   p_to;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('EG', 'EG', c('Dg', 'CK'), [s0=[arg('Dg',1,s0)], s1=[arg('Dg',1,s1)], s2=[arg('Dg',1,s2),arg('CK',2,s0),arg('CK',2,s1),arg('CK',2,s2)], s3=[arg('CK',2,s3)]]).

%% EH --> Dg   CL   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \d,+case,v;-f;-wh_rel --> /p_to,\d,+case,v   p_to;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('EH', 'EH', c('Dg', 'CL'), [s0=[arg('Dg',1,s0)], s1=[arg('Dg',1,s1)], s2=[arg('Dg',1,s2),arg('CL',2,s0),arg('CL',2,s1),arg('CL',2,s2)], s3=[arg('CL',2,s3)], s4=[arg('CL',2,s4)]]).

%% EI --> Dg   CM   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \d,+case,v;-wh_rel --> /p_to,\d,+case,v   p_to;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
rule('EI', 'EI', c('Dg', 'CM'), [s0=[arg('Dg',1,s0)], s1=[arg('Dg',1,s1)], s2=[arg('Dg',1,s2),arg('CM',2,s0),arg('CM',2,s1),arg('CM',2,s2)], s3=[arg('CM',2,s3)]]).

%% EJ --> Dg   CN   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \d,+case,v;-wh_rel;-f --> /p_to,\d,+case,v   p_to;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
rule('EJ', 'EJ', c('Dg', 'CN'), [s0=[arg('Dg',1,s0)], s1=[arg('Dg',1,s1)], s2=[arg('Dg',1,s2),arg('CN',2,s0),arg('CN',2,s1),arg('CN',2,s2)], s3=[arg('CN',2,s3)], s4=[arg('CN',2,s4)]]).

%% As --> ""	(* @ --> "" *)
rule('As', 'As', c, [s0=[]]).

%% E --> "angry"	(* sigma(A) --> "angry" *)
rule('E', 'E', c, [s0=[tok('angry')]]).

%% E --> "cheap"	(* sigma(A) --> "cheap" *)
rule('E', 'E', c, [s0=[tok('cheap')]]).

%% E --> "clever"	(* sigma(A) --> "clever" *)
rule('E', 'E', c, [s0=[tok('clever')]]).

%% E --> "gentle"	(* sigma(A) --> "gentle" *)
rule('E', 'E', c, [s0=[tok('gentle')]]).

%% E --> "honest"	(* sigma(A) --> "honest" *)
rule('E', 'E', c, [s0=[tok('honest')]]).

%% E --> "ill"	(* sigma(A) --> "ill" *)
rule('E', 'E', c, [s0=[tok('ill')]]).

%% E --> "important"	(* sigma(A) --> "important" *)
rule('E', 'E', c, [s0=[tok('important')]]).

%% E --> "interesting"	(* sigma(A) --> "interesting" *)
rule('E', 'E', c, [s0=[tok('interesting')]]).

%% E --> "kind"	(* sigma(A) --> "kind" *)
rule('E', 'E', c, [s0=[tok('kind')]]).

%% E --> "late"	(* sigma(A) --> "late" *)
rule('E', 'E', c, [s0=[tok('late')]]).

%% E --> "long"	(* sigma(A) --> "long" *)
rule('E', 'E', c, [s0=[tok('long')]]).

%% E --> "lost"	(* sigma(A) --> "lost" *)
rule('E', 'E', c, [s0=[tok('lost')]]).

%% E --> "old"	(* sigma(A) --> "old" *)
rule('E', 'E', c, [s0=[tok('old')]]).

%% E --> "poor"	(* sigma(A) --> "poor" *)
rule('E', 'E', c, [s0=[tok('poor')]]).

%% E --> "pretty"	(* sigma(A) --> "pretty" *)
rule('E', 'E', c, [s0=[tok('pretty')]]).

%% E --> "proud"	(* sigma(A) --> "proud" *)
rule('E', 'E', c, [s0=[tok('proud')]]).

%% E --> "right"	(* sigma(A) --> "right" *)
rule('E', 'E', c, [s0=[tok('right')]]).

%% E --> "sad"	(* sigma(A) --> "sad" *)
rule('E', 'E', c, [s0=[tok('sad')]]).

%% E --> "strange"	(* sigma(A) --> "strange" *)
rule('E', 'E', c, [s0=[tok('strange')]]).

%% E --> "young"	(* sigma(A) --> "young" *)
rule('E', 'E', c, [s0=[tok('young')]]).

%% D --> "Ann"	(* sigma(d,-case) --> "Ann" *)
rule('D', 'D', c, [s0=[tok('Ann')]]).

%% D --> "Chris"	(* sigma(d,-case) --> "Chris" *)
rule('D', 'D', c, [s0=[tok('Chris')]]).

%% D --> "Clare"	(* sigma(d,-case) --> "Clare" *)
rule('D', 'D', c, [s0=[tok('Clare')]]).

%% D --> "David"	(* sigma(d,-case) --> "David" *)
rule('D', 'D', c, [s0=[tok('David')]]).

%% D --> "Dick"	(* sigma(d,-case) --> "Dick" *)
rule('D', 'D', c, [s0=[tok('Dick')]]).

%% D --> "I"	(* sigma(d,-case) --> "I" *)
rule('D', 'D', c, [s0=[tok('I')]]).

%% D --> "Jenny"	(* sigma(d,-case) --> "Jenny" *)
rule('D', 'D', c, [s0=[tok('Jenny')]]).

%% D --> "Jim"	(* sigma(d,-case) --> "Jim" *)
rule('D', 'D', c, [s0=[tok('Jim')]]).

%% D --> "Joe"	(* sigma(d,-case) --> "Joe" *)
rule('D', 'D', c, [s0=[tok('Joe')]]).

%% D --> "John"	(* sigma(d,-case) --> "John" *)
rule('D', 'D', c, [s0=[tok('John')]]).

%% D --> "Mary"	(* sigma(d,-case) --> "Mary" *)
rule('D', 'D', c, [s0=[tok('Mary')]]).

%% D --> "Pat"	(* sigma(d,-case) --> "Pat" *)
rule('D', 'D', c, [s0=[tok('Pat')]]).

%% D --> "Patrick"	(* sigma(d,-case) --> "Patrick" *)
rule('D', 'D', c, [s0=[tok('Patrick')]]).

%% D --> "Paul"	(* sigma(d,-case) --> "Paul" *)
rule('D', 'D', c, [s0=[tok('Paul')]]).

%% D --> "Penny"	(* sigma(d,-case) --> "Penny" *)
rule('D', 'D', c, [s0=[tok('Penny')]]).

%% D --> "Sally"	(* sigma(d,-case) --> "Sally" *)
rule('D', 'D', c, [s0=[tok('Sally')]]).

%% D --> "Stephen"	(* sigma(d,-case) --> "Stephen" *)
rule('D', 'D', c, [s0=[tok('Stephen')]]).

%% D --> "Sue"	(* sigma(d,-case) --> "Sue" *)
rule('D', 'D', c, [s0=[tok('Sue')]]).

%% D --> "apples"	(* sigma(d,-case) --> "apples" *)
rule('D', 'D', c, [s0=[tok('apples')]]).

%% D --> "eggs"	(* sigma(d,-case) --> "eggs" *)
rule('D', 'D', c, [s0=[tok('eggs')]]).

%% D --> "he"	(* sigma(d,-case) --> "he" *)
rule('D', 'D', c, [s0=[tok('he')]]).

%% D --> "it"	(* sigma(d,-case) --> "it" *)
rule('D', 'D', c, [s0=[tok('it')]]).

%% D --> "lies"	(* sigma(d,-case) --> "lies" *)
rule('D', 'D', c, [s0=[tok('lies')]]).

%% D --> "reading"	(* sigma(d,-case) --> "reading" *)
rule('D', 'D', c, [s0=[tok('reading')]]).

%% D --> "they"	(* sigma(d,-case) --> "they" *)
rule('D', 'D', c, [s0=[tok('they')]]).

%% D --> "us"	(* sigma(d,-case) --> "us" *)
rule('D', 'D', c, [s0=[tok('us')]]).

%% U --> "always"	(* sigma(deg) --> "always" *)
rule('U', 'U', c, [s0=[tok('always')]]).

%% U --> "so"	(* sigma(deg) --> "so" *)
rule('U', 'U', c, [s0=[tok('so')]]).

%% U --> "too"	(* sigma(deg) --> "too" *)
rule('U', 'U', c, [s0=[tok('too')]]).

%% U --> "very"	(* sigma(deg) --> "very" *)
rule('U', 'U', c, [s0=[tok('very')]]).

%% B --> "accident"	(* sigma(n) --> "accident" *)
rule('B', 'B', c, [s0=[tok('accident')]]).

%% B --> "answer"	(* sigma(n) --> "answer" *)
rule('B', 'B', c, [s0=[tok('answer')]]).

%% B --> "apple"	(* sigma(n) --> "apple" *)
rule('B', 'B', c, [s0=[tok('apple')]]).

%% B --> "bill"	(* sigma(n) --> "bill" *)
rule('B', 'B', c, [s0=[tok('bill')]]).

%% B --> "book"	(* sigma(n) --> "book" *)
rule('B', 'B', c, [s0=[tok('book')]]).

%% B --> "box"	(* sigma(n) --> "box" *)
rule('B', 'B', c, [s0=[tok('box')]]).

%% B --> "boy"	(* sigma(n) --> "boy" *)
rule('B', 'B', c, [s0=[tok('boy')]]).

%% B --> "brother"	(* sigma(n) --> "brother" *)
rule('B', 'B', c, [s0=[tok('brother')]]).

%% B --> "cake"	(* sigma(n) --> "cake" *)
rule('B', 'B', c, [s0=[tok('cake')]]).

%% B --> "car"	(* sigma(n) --> "car" *)
rule('B', 'B', c, [s0=[tok('car')]]).

%% B --> "cat"	(* sigma(n) --> "cat" *)
rule('B', 'B', c, [s0=[tok('cat')]]).

%% B --> "clothe"	(* sigma(n) --> "clothe" *)
rule('B', 'B', c, [s0=[tok('clothe')]]).

%% B --> "dog"	(* sigma(n) --> "dog" *)
rule('B', 'B', c, [s0=[tok('dog')]]).

%% B --> "father"	(* sigma(n) --> "father" *)
rule('B', 'B', c, [s0=[tok('father')]]).

%% B --> "food"	(* sigma(n) --> "food" *)
rule('B', 'B', c, [s0=[tok('food')]]).

%% B --> "friend"	(* sigma(n) --> "friend" *)
rule('B', 'B', c, [s0=[tok('friend')]]).

%% B --> "girl"	(* sigma(n) --> "girl" *)
rule('B', 'B', c, [s0=[tok('girl')]]).

%% B --> "house"	(* sigma(n) --> "house" *)
rule('B', 'B', c, [s0=[tok('house')]]).

%% B --> "leg"	(* sigma(n) --> "leg" *)
rule('B', 'B', c, [s0=[tok('leg')]]).

%% B --> "letter"	(* sigma(n) --> "letter" *)
rule('B', 'B', c, [s0=[tok('letter')]]).

%% B --> "lie"	(* sigma(n) --> "lie" *)
rule('B', 'B', c, [s0=[tok('lie')]]).

%% B --> "man"	(* sigma(n) --> "man" *)
rule('B', 'B', c, [s0=[tok('man')]]).

%% B --> "mother"	(* sigma(n) --> "mother" *)
rule('B', 'B', c, [s0=[tok('mother')]]).

%% B --> "picture"	(* sigma(n) --> "picture" *)
rule('B', 'B', c, [s0=[tok('picture')]]).

%% B --> "present"	(* sigma(n) --> "present" *)
rule('B', 'B', c, [s0=[tok('present')]]).

%% B --> "sailor"	(* sigma(n) --> "sailor" *)
rule('B', 'B', c, [s0=[tok('sailor')]]).

%% B --> "ship"	(* sigma(n) --> "ship" *)
rule('B', 'B', c, [s0=[tok('ship')]]).

%% B --> "story"	(* sigma(n) --> "story" *)
rule('B', 'B', c, [s0=[tok('story')]]).

%% B --> "sweet"	(* sigma(n) --> "sweet" *)
rule('B', 'B', c, [s0=[tok('sweet')]]).

%% B --> "ticket"	(* sigma(n) --> "ticket" *)
rule('B', 'B', c, [s0=[tok('ticket')]]).

%% B --> "town"	(* sigma(n) --> "town" *)
rule('B', 'B', c, [s0=[tok('town')]]).

%% B --> "treat"	(* sigma(n) --> "treat" *)
rule('B', 'B', c, [s0=[tok('treat')]]).

%% B --> "trick"	(* sigma(n) --> "trick" *)
rule('B', 'B', c, [s0=[tok('trick')]]).

%% B --> "uncle"	(* sigma(n) --> "uncle" *)
rule('B', 'B', c, [s0=[tok('uncle')]]).

%% B --> "woman"	(* sigma(n) --> "woman" *)
rule('B', 'B', c, [s0=[tok('woman')]]).

%% C --> "accident"	(* sigma(n,-f) --> "accident" *)
rule('C', 'C', c, [s0=[tok('accident')]]).

%% C --> "answer"	(* sigma(n,-f) --> "answer" *)
rule('C', 'C', c, [s0=[tok('answer')]]).

%% C --> "apple"	(* sigma(n,-f) --> "apple" *)
rule('C', 'C', c, [s0=[tok('apple')]]).

%% C --> "bill"	(* sigma(n,-f) --> "bill" *)
rule('C', 'C', c, [s0=[tok('bill')]]).

%% C --> "book"	(* sigma(n,-f) --> "book" *)
rule('C', 'C', c, [s0=[tok('book')]]).

%% C --> "box"	(* sigma(n,-f) --> "box" *)
rule('C', 'C', c, [s0=[tok('box')]]).

%% C --> "boy"	(* sigma(n,-f) --> "boy" *)
rule('C', 'C', c, [s0=[tok('boy')]]).

%% C --> "brother"	(* sigma(n,-f) --> "brother" *)
rule('C', 'C', c, [s0=[tok('brother')]]).

%% C --> "cake"	(* sigma(n,-f) --> "cake" *)
rule('C', 'C', c, [s0=[tok('cake')]]).

%% C --> "car"	(* sigma(n,-f) --> "car" *)
rule('C', 'C', c, [s0=[tok('car')]]).

%% C --> "cat"	(* sigma(n,-f) --> "cat" *)
rule('C', 'C', c, [s0=[tok('cat')]]).

%% C --> "clothe"	(* sigma(n,-f) --> "clothe" *)
rule('C', 'C', c, [s0=[tok('clothe')]]).

%% C --> "dog"	(* sigma(n,-f) --> "dog" *)
rule('C', 'C', c, [s0=[tok('dog')]]).

%% C --> "father"	(* sigma(n,-f) --> "father" *)
rule('C', 'C', c, [s0=[tok('father')]]).

%% C --> "food"	(* sigma(n,-f) --> "food" *)
rule('C', 'C', c, [s0=[tok('food')]]).

%% C --> "friend"	(* sigma(n,-f) --> "friend" *)
rule('C', 'C', c, [s0=[tok('friend')]]).

%% C --> "girl"	(* sigma(n,-f) --> "girl" *)
rule('C', 'C', c, [s0=[tok('girl')]]).

%% C --> "house"	(* sigma(n,-f) --> "house" *)
rule('C', 'C', c, [s0=[tok('house')]]).

%% C --> "leg"	(* sigma(n,-f) --> "leg" *)
rule('C', 'C', c, [s0=[tok('leg')]]).

%% C --> "letter"	(* sigma(n,-f) --> "letter" *)
rule('C', 'C', c, [s0=[tok('letter')]]).

%% C --> "lie"	(* sigma(n,-f) --> "lie" *)
rule('C', 'C', c, [s0=[tok('lie')]]).

%% C --> "man"	(* sigma(n,-f) --> "man" *)
rule('C', 'C', c, [s0=[tok('man')]]).

%% C --> "mother"	(* sigma(n,-f) --> "mother" *)
rule('C', 'C', c, [s0=[tok('mother')]]).

%% C --> "picture"	(* sigma(n,-f) --> "picture" *)
rule('C', 'C', c, [s0=[tok('picture')]]).

%% C --> "present"	(* sigma(n,-f) --> "present" *)
rule('C', 'C', c, [s0=[tok('present')]]).

%% C --> "sailor"	(* sigma(n,-f) --> "sailor" *)
rule('C', 'C', c, [s0=[tok('sailor')]]).

%% C --> "ship"	(* sigma(n,-f) --> "ship" *)
rule('C', 'C', c, [s0=[tok('ship')]]).

%% C --> "story"	(* sigma(n,-f) --> "story" *)
rule('C', 'C', c, [s0=[tok('story')]]).

%% C --> "sweet"	(* sigma(n,-f) --> "sweet" *)
rule('C', 'C', c, [s0=[tok('sweet')]]).

%% C --> "ticket"	(* sigma(n,-f) --> "ticket" *)
rule('C', 'C', c, [s0=[tok('ticket')]]).

%% C --> "town"	(* sigma(n,-f) --> "town" *)
rule('C', 'C', c, [s0=[tok('town')]]).

%% C --> "treat"	(* sigma(n,-f) --> "treat" *)
rule('C', 'C', c, [s0=[tok('treat')]]).

%% C --> "trick"	(* sigma(n,-f) --> "trick" *)
rule('C', 'C', c, [s0=[tok('trick')]]).

%% C --> "uncle"	(* sigma(n,-f) --> "uncle" *)
rule('C', 'C', c, [s0=[tok('uncle')]]).

%% C --> "woman"	(* sigma(n,-f) --> "woman" *)
rule('C', 'C', c, [s0=[tok('woman')]]).

%% AC --> "today"	(* sigma(tmp) --> "today" *)
rule('AC', 'AC', c, [s0=[tok('today')]]).

%% AC --> "yesterday"	(* sigma(tmp) --> "yesterday" *)
rule('AC', 'AC', c, [s0=[tok('yesterday')]]).

%% d --> "matter"	(* sigma(v) --> "matter" *)
rule('d', 'd', c, [s0=[tok('matter')]]).

%% d --> "rule"	(* sigma(v) --> "rule" *)
rule('d', 'd', c, [s0=[tok('rule')]]).

%% d --> "wait"	(* sigma(v) --> "wait" *)
rule('d', 'd', c, [s0=[tok('wait')]]).

%% Au --> "come"	(* sigma(/A,v) --> "come" *)
rule('Au', 'Au', c, [s0=[tok('come')]]).

%% Av --> ""	(* sigma(/A,\d,a) --> "" *)
rule('Av', 'Av', c, [s0=[]]).

%% Aw --> "will"	(* sigma(/Be,Modal) --> "will" *)
rule('Aw', 'Aw', c, [s0=[tok('will')]]).

%% Ax --> "have"	(* sigma(/Been,Have) --> "have" *)
rule('Ax', 'Ax', c, [s0=[tok('have')]]).

%% Ay --> "fact"	(* sigma(/Ce,n) --> "fact" *)
rule('Ay', 'Ay', c, [s0=[tok('fact')]]).

%% e --> "forget"	(* sigma(/Ce,v) --> "forget" *)
rule('e', 'e', c, [s0=[tok('forget')]]).

%% e --> "know"	(* sigma(/Ce,v) --> "know" *)
rule('e', 'e', c, [s0=[tok('know')]]).

%% e --> "remember"	(* sigma(/Ce,v) --> "remember" *)
rule('e', 'e', c, [s0=[tok('remember')]]).

%% Az --> "will"	(* sigma(/Have,Modal) --> "will" *)
rule('Az', 'Az', c, [s0=[tok('will')]]).

%% V --> "a"	(* sigma(/Num,d,-case) --> "a" *)
rule('V', 'V', c, [s0=[tok('a')]]).

%% V --> "my"	(* sigma(/Num,d,-case) --> "my" *)
rule('V', 'V', c, [s0=[tok('my')]]).

%% V --> "one"	(* sigma(/Num,d,-case) --> "one" *)
rule('V', 'V', c, [s0=[tok('one')]]).

%% V --> "the"	(* sigma(/Num,d,-case) --> "the" *)
rule('V', 'V', c, [s0=[tok('the')]]).

%% AD --> "which"	(* sigma(/Num,+f,d,-case,-wh_rel) --> "which" *)
rule('AD', 'AD', c, [s0=[tok('which')]]).

%% AD --> "who"	(* sigma(/Num,+f,d,-case,-wh_rel) --> "who" *)
rule('AD', 'AD', c, [s0=[tok('who')]]).

%% BA --> "s"	(* sigma(/Num,\Num,n) --> "s" *)
rule('BA', 'BA', c, [s0=[tok('s')]]).

%% BB --> "be"	(* sigma(/a,Be) --> "be" *)
rule('BB', 'BB', c, [s0=[tok('be')]]).

%% BC --> "the"	(* sigma(/c_rel,d,-case) --> "the" *)
rule('BC', 'BC', c, [s0=[tok('the')]]).

%% BD --> "for"	(* sigma(/d,+case,Pfor) --> "for" *)
rule('BD', 'BD', c, [s0=[tok('for')]]).

%% BE --> "to"	(* sigma(/d,+case,Pto) --> "to" *)
rule('BE', 'BE', c, [s0=[tok('to')]]).

%% F --> "bring"	(* sigma(/d,+case,v) --> "bring" *)
rule('F', 'F', c, [s0=[tok('bring')]]).

%% F --> "buy"	(* sigma(/d,+case,v) --> "buy" *)
rule('F', 'F', c, [s0=[tok('buy')]]).

%% F --> "get"	(* sigma(/d,+case,v) --> "get" *)
rule('F', 'F', c, [s0=[tok('get')]]).

%% F --> "hate"	(* sigma(/d,+case,v) --> "hate" *)
rule('F', 'F', c, [s0=[tok('hate')]]).

%% F --> "have"	(* sigma(/d,+case,v) --> "have" *)
rule('F', 'F', c, [s0=[tok('have')]]).

%% F --> "leave"	(* sigma(/d,+case,v) --> "leave" *)
rule('F', 'F', c, [s0=[tok('leave')]]).

%% F --> "like"	(* sigma(/d,+case,v) --> "like" *)
rule('F', 'F', c, [s0=[tok('like')]]).

%% F --> "love"	(* sigma(/d,+case,v) --> "love" *)
rule('F', 'F', c, [s0=[tok('love')]]).

%% F --> "pay"	(* sigma(/d,+case,v) --> "pay" *)
rule('F', 'F', c, [s0=[tok('pay')]]).

%% F --> "sell"	(* sigma(/d,+case,v) --> "sell" *)
rule('F', 'F', c, [s0=[tok('sell')]]).

%% F --> "send"	(* sigma(/d,+case,v) --> "send" *)
rule('F', 'F', c, [s0=[tok('send')]]).

%% F --> "surprise"	(* sigma(/d,+case,v) --> "surprise" *)
rule('F', 'F', c, [s0=[tok('surprise')]]).

%% F --> "take"	(* sigma(/d,+case,v) --> "take" *)
rule('F', 'F', c, [s0=[tok('take')]]).

%% F --> "tell"	(* sigma(/d,+case,v) --> "tell" *)
rule('F', 'F', c, [s0=[tok('tell')]]).

%% F --> "write"	(* sigma(/d,+case,v) --> "write" *)
rule('F', 'F', c, [s0=[tok('write')]]).

%% BF --> ""	(* sigma(/d,+case,\d,a) --> "" *)
rule('BF', 'BF', c, [s0=[]]).

%% BG --> "will"	(* sigma(/little_v,Modal) --> "will" *)
rule('BG', 'BG', c, [s0=[tok('will')]]).

%% BH --> "doesnt"	(* sigma(/little_v,+case,t) --> "doesnt" *)
rule('BH', 'BH', c, [s0=[tok('doesnt')]]).

%% BI --> ""	(* sigma(/n,Num) --> "" *)
rule('BI', 'BI', c, [s0=[]]).

%% BJ --> "pay"	(* sigma(/p_for,v) --> "pay" *)
rule('BJ', 'BJ', c, [s0=[tok('pay')]]).

%% G --> "explain"	(* sigma(/p_to,\d,+case,v) --> "explain" *)
rule('G', 'G', c, [s0=[tok('explain')]]).

%% G --> "give"	(* sigma(/p_to,\d,+case,v) --> "give" *)
rule('G', 'G', c, [s0=[tok('give')]]).

%% G --> "sell"	(* sigma(/p_to,\d,+case,v) --> "sell" *)
rule('G', 'G', c, [s0=[tok('sell')]]).

%% G --> "show"	(* sigma(/p_to,\d,+case,v) --> "show" *)
rule('G', 'G', c, [s0=[tok('show')]]).

%% G --> "teach"	(* sigma(/p_to,\d,+case,v) --> "teach" *)
rule('G', 'G', c, [s0=[tok('teach')]]).

%% G --> "tell"	(* sigma(/p_to,\d,+case,v) --> "tell" *)
rule('G', 'G', c, [s0=[tok('tell')]]).

%% BK --> "that"	(* sigma(/t,Ce) --> "that" *)
rule('BK', 'BK', c, [s0=[tok('that')]]).

%% BL --> ""	(* sigma(/t,c) --> "" *)
rule('BL', 'BL', c, [s0=[]]).

%% BM --> ""	(* sigma(/t,+wh_rel,c_rel) --> "" *)
rule('BM', 'BM', c, [s0=[]]).

%% BN --> "have"	(* sigma(/ven,Have) --> "have" *)
rule('BN', 'BN', c, [s0=[tok('have')]]).

%% BO --> "be"	(* sigma(/ving,Be) --> "be" *)
rule('BO', 'BO', c, [s0=[tok('be')]]).

%% BP --> "been"	(* sigma(/ving,Been) --> "been" *)
rule('BP', 'BP', c, [s0=[tok('been')]]).

%% BQ --> "-s"	(* sigma(n==>,Num) --> "-s" *)
rule('BQ', 'BQ', c, [s0=[tok('-s')]]).

%% f --> ""	(* sigma(=>Be,+case,t) --> "" *)
rule('f', 'f', c, [s0=[]]).

%% f --> "-ed"	(* sigma(=>Be,+case,t) --> "-ed" *)
rule('f', 'f', c, [s0=[tok('-ed')]]).

%% f --> "-s"	(* sigma(=>Be,+case,t) --> "-s" *)
rule('f', 'f', c, [s0=[tok('-s')]]).

%% g --> ""	(* sigma(=>Have,+case,t) --> "" *)
rule('g', 'g', c, [s0=[]]).

%% g --> "-ed"	(* sigma(=>Have,+case,t) --> "-ed" *)
rule('g', 'g', c, [s0=[tok('-ed')]]).

%% g --> "-s"	(* sigma(=>Have,+case,t) --> "-s" *)
rule('g', 'g', c, [s0=[tok('-s')]]).

%% h --> ""	(* sigma(=>Modal,+case,t) --> "" *)
rule('h', 'h', c, [s0=[]]).

%% h --> "-ed"	(* sigma(=>Modal,+case,t) --> "-ed" *)
rule('h', 'h', c, [s0=[tok('-ed')]]).

%% h --> "-s"	(* sigma(=>Modal,+case,t) --> "-s" *)
rule('h', 'h', c, [s0=[tok('-s')]]).

%% BR --> ""	(* sigma(=>Pfor,p_for) --> "" *)
rule('BR', 'BR', c, [s0=[]]).

%% BT --> ""	(* sigma(=>Pto,p_to) --> "" *)
rule('BT', 'BT', c, [s0=[]]).

%% i --> ""	(* sigma(=>little_v,+case,t) --> "" *)
rule('i', 'i', c, [s0=[]]).

%% i --> "-ed"	(* sigma(=>little_v,+case,t) --> "-ed" *)
rule('i', 'i', c, [s0=[tok('-ed')]]).

%% i --> "-s"	(* sigma(=>little_v,+case,t) --> "-s" *)
rule('i', 'i', c, [s0=[tok('-s')]]).

%% BU --> ""	(* sigma(=>v,/d,little_v) --> "" *)
rule('BU', 'BU', c, [s0=[]]).

%% BV --> "-en"	(* sigma(=>v,/d,ven) --> "-en" *)
rule('BV', 'BV', c, [s0=[tok('-en')]]).

%% BW --> "-ing"	(* sigma(=>v,/d,ving) --> "-ing" *)
rule('BW', 'BW', c, [s0=[tok('-ing')]]).

%% AE --> E   At   [1,0][0,0][1,1]	(* A --> sigma(A)   @@   [1,0][0,0][1,1] *)
rule('AE', 'AE', c('E', 'At'), [s0=[arg('At',2,s0)], s1=[arg('E',1,s0)], s2=[arg('At',2,s1)]]).

%% t --> D   At   [1,0][0,0][1,1]	(* d,-case --> sigma(d,-case)   @@   [1,0][0,0][1,1] *)
rule('t', 't', c('D', 'At'), [s0=[arg('At',2,s0)], s1=[arg('D',1,s0)], s2=[arg('At',2,s1)]]).

%% CA --> U   At   [1,0][0,0][1,1]	(* deg --> sigma(deg)   @@   [1,0][0,0][1,1] *)
rule('CA', 'CA', c('U', 'At'), [s0=[arg('At',2,s0)], s1=[arg('U',1,s0)], s2=[arg('At',2,s1)]]).

%% W --> B   At   [1,0][0,0][1,1]	(* n --> sigma(n)   @@   [1,0][0,0][1,1] *)
rule('W', 'W', c('B', 'At'), [s0=[arg('At',2,s0)], s1=[arg('B',1,s0)], s2=[arg('At',2,s1)]]).

%% Ag --> C   At   [1,0][0,0][1,1]	(* n,-f --> sigma(n,-f)   @@   [1,0][0,0][1,1] *)
rule('Ag', 'Ag', c('C', 'At'), [s0=[arg('At',2,s0)], s1=[arg('C',1,s0)], s2=[arg('At',2,s1)]]).

%% CR --> AC   At   [1,0][0,0][1,1]	(* tmp --> sigma(tmp)   @@   [1,0][0,0][1,1] *)
rule('CR', 'CR', c('AC', 'At'), [s0=[arg('At',2,s0)], s1=[arg('AC',1,s0)], s2=[arg('At',2,s1)]]).

%% H --> d   At   [1,0][0,0][1,1]	(* v --> sigma(v)   @@   [1,0][0,0][1,1] *)
rule('H', 'H', c('d', 'At'), [s0=[arg('At',2,s0)], s1=[arg('d',1,s0)], s2=[arg('At',2,s1)]]).

%% Cw --> Au   At   [1,0][0,0][1,1]	(* /A,v --> sigma(/A,v)   @@   [1,0][0,0][1,1] *)
rule('Cw', 'Cw', c('Au', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Au',1,s0)], s2=[arg('At',2,s1)]]).

%% Cx --> Av   At   [1,0][0,0][1,1]	(* /A,\d,a --> sigma(/A,\d,a)   @@   [1,0][0,0][1,1] *)
rule('Cx', 'Cx', c('Av', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Av',1,s0)], s2=[arg('At',2,s1)]]).

%% Cy --> Aw   At   [1,0][0,0][1,1]	(* /Be,Modal --> sigma(/Be,Modal)   @@   [1,0][0,0][1,1] *)
rule('Cy', 'Cy', c('Aw', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Aw',1,s0)], s2=[arg('At',2,s1)]]).

%% Cz --> Ax   At   [1,0][0,0][1,1]	(* /Been,Have --> sigma(/Been,Have)   @@   [1,0][0,0][1,1] *)
rule('Cz', 'Cz', c('Ax', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Ax',1,s0)], s2=[arg('At',2,s1)]]).

%% DA --> Ay   At   [1,0][0,0][1,1]	(* /Ce,n --> sigma(/Ce,n)   @@   [1,0][0,0][1,1] *)
rule('DA', 'DA', c('Ay', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Ay',1,s0)], s2=[arg('At',2,s1)]]).

%% DB --> e   At   [1,0][0,0][1,1]	(* /Ce,v --> sigma(/Ce,v)   @@   [1,0][0,0][1,1] *)
rule('DB', 'DB', c('e', 'At'), [s0=[arg('At',2,s0)], s1=[arg('e',1,s0)], s2=[arg('At',2,s1)]]).

%% DC --> Az   At   [1,0][0,0][1,1]	(* /Have,Modal --> sigma(/Have,Modal)   @@   [1,0][0,0][1,1] *)
rule('DC', 'DC', c('Az', 'At'), [s0=[arg('At',2,s0)], s1=[arg('Az',1,s0)], s2=[arg('At',2,s1)]]).

%% DD --> V   At   [1,0][0,0][1,1]	(* /Num,d,-case --> sigma(/Num,d,-case)   @@   [1,0][0,0][1,1] *)
rule('DD', 'DD', c('V', 'At'), [s0=[arg('At',2,s0)], s1=[arg('V',1,s0)], s2=[arg('At',2,s1)]]).

%% DE --> AD   At   [1,0][0,0][1,1]	(* /Num,+f,d,-case,-wh_rel --> sigma(/Num,+f,d,-case,-wh_rel)   @@   [1,0][0,0][1,1] *)
rule('DE', 'DE', c('AD', 'At'), [s0=[arg('At',2,s0)], s1=[arg('AD',1,s0)], s2=[arg('At',2,s1)]]).

%% DF --> BA   At   [1,0][0,0][1,1]	(* /Num,\Num,n --> sigma(/Num,\Num,n)   @@   [1,0][0,0][1,1] *)
rule('DF', 'DF', c('BA', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BA',1,s0)], s2=[arg('At',2,s1)]]).

%% DG --> BB   At   [1,0][0,0][1,1]	(* /a,Be --> sigma(/a,Be)   @@   [1,0][0,0][1,1] *)
rule('DG', 'DG', c('BB', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BB',1,s0)], s2=[arg('At',2,s1)]]).

%% DH --> BC   At   [1,0][0,0][1,1]	(* /c_rel,d,-case --> sigma(/c_rel,d,-case)   @@   [1,0][0,0][1,1] *)
rule('DH', 'DH', c('BC', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BC',1,s0)], s2=[arg('At',2,s1)]]).

%% DY --> BD   At   [1,0][0,0][1,1]	(* /d,+case,Pfor --> sigma(/d,+case,Pfor)   @@   [1,0][0,0][1,1] *)
rule('DY', 'DY', c('BD', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BD',1,s0)], s2=[arg('At',2,s1)]]).

%% DZ --> BE   At   [1,0][0,0][1,1]	(* /d,+case,Pto --> sigma(/d,+case,Pto)   @@   [1,0][0,0][1,1] *)
rule('DZ', 'DZ', c('BE', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BE',1,s0)], s2=[arg('At',2,s1)]]).

%% Da --> F   At   [1,0][0,0][1,1]	(* /d,+case,v --> sigma(/d,+case,v)   @@   [1,0][0,0][1,1] *)
rule('Da', 'Da', c('F', 'At'), [s0=[arg('At',2,s0)], s1=[arg('F',1,s0)], s2=[arg('At',2,s1)]]).

%% Db --> BF   At   [1,0][0,0][1,1]	(* /d,+case,\d,a --> sigma(/d,+case,\d,a)   @@   [1,0][0,0][1,1] *)
rule('Db', 'Db', c('BF', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BF',1,s0)], s2=[arg('At',2,s1)]]).

%% Dc --> BG   At   [1,0][0,0][1,1]	(* /little_v,Modal --> sigma(/little_v,Modal)   @@   [1,0][0,0][1,1] *)
rule('Dc', 'Dc', c('BG', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BG',1,s0)], s2=[arg('At',2,s1)]]).

%% Dd --> BH   At   [1,0][0,0][1,1]	(* /little_v,+case,t --> sigma(/little_v,+case,t)   @@   [1,0][0,0][1,1] *)
rule('Dd', 'Dd', c('BH', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BH',1,s0)], s2=[arg('At',2,s1)]]).

%% De --> BI   At   [1,0][0,0][1,1]	(* /n,Num --> sigma(/n,Num)   @@   [1,0][0,0][1,1] *)
rule('De', 'De', c('BI', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BI',1,s0)], s2=[arg('At',2,s1)]]).

%% Df --> BJ   At   [1,0][0,0][1,1]	(* /p_for,v --> sigma(/p_for,v)   @@   [1,0][0,0][1,1] *)
rule('Df', 'Df', c('BJ', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BJ',1,s0)], s2=[arg('At',2,s1)]]).

%% Dg --> G   At   [1,0][0,0][1,1]	(* /p_to,\d,+case,v --> sigma(/p_to,\d,+case,v)   @@   [1,0][0,0][1,1] *)
rule('Dg', 'Dg', c('G', 'At'), [s0=[arg('At',2,s0)], s1=[arg('G',1,s0)], s2=[arg('At',2,s1)]]).

%% Dh --> BK   At   [1,0][0,0][1,1]	(* /t,Ce --> sigma(/t,Ce)   @@   [1,0][0,0][1,1] *)
rule('Dh', 'Dh', c('BK', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BK',1,s0)], s2=[arg('At',2,s1)]]).

%% Di --> BL   At   [1,0][0,0][1,1]	(* /t,c --> sigma(/t,c)   @@   [1,0][0,0][1,1] *)
rule('Di', 'Di', c('BL', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BL',1,s0)], s2=[arg('At',2,s1)]]).

%% Dj --> BM   At   [1,0][0,0][1,1]	(* /t,+wh_rel,c_rel --> sigma(/t,+wh_rel,c_rel)   @@   [1,0][0,0][1,1] *)
rule('Dj', 'Dj', c('BM', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BM',1,s0)], s2=[arg('At',2,s1)]]).

%% Dk --> BN   At   [1,0][0,0][1,1]	(* /ven,Have --> sigma(/ven,Have)   @@   [1,0][0,0][1,1] *)
rule('Dk', 'Dk', c('BN', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BN',1,s0)], s2=[arg('At',2,s1)]]).

%% Dl --> BO   At   [1,0][0,0][1,1]	(* /ving,Be --> sigma(/ving,Be)   @@   [1,0][0,0][1,1] *)
rule('Dl', 'Dl', c('BO', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BO',1,s0)], s2=[arg('At',2,s1)]]).

%% Dm --> BP   At   [1,0][0,0][1,1]	(* /ving,Been --> sigma(/ving,Been)   @@   [1,0][0,0][1,1] *)
rule('Dm', 'Dm', c('BP', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BP',1,s0)], s2=[arg('At',2,s1)]]).

%% Dn --> BQ   At   [1,0][0,0][1,1]	(* n==>,Num --> sigma(n==>,Num)   @@   [1,0][0,0][1,1] *)
rule('Dn', 'Dn', c('BQ', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BQ',1,s0)], s2=[arg('At',2,s1)]]).

%% Do --> f   At   [1,0][0,0][1,1]	(* =>Be,+case,t --> sigma(=>Be,+case,t)   @@   [1,0][0,0][1,1] *)
rule('Do', 'Do', c('f', 'At'), [s0=[arg('At',2,s0)], s1=[arg('f',1,s0)], s2=[arg('At',2,s1)]]).

%% Dp --> g   At   [1,0][0,0][1,1]	(* =>Have,+case,t --> sigma(=>Have,+case,t)   @@   [1,0][0,0][1,1] *)
rule('Dp', 'Dp', c('g', 'At'), [s0=[arg('At',2,s0)], s1=[arg('g',1,s0)], s2=[arg('At',2,s1)]]).

%% Dq --> h   At   [1,0][0,0][1,1]	(* =>Modal,+case,t --> sigma(=>Modal,+case,t)   @@   [1,0][0,0][1,1] *)
rule('Dq', 'Dq', c('h', 'At'), [s0=[arg('At',2,s0)], s1=[arg('h',1,s0)], s2=[arg('At',2,s1)]]).

%% Dr --> BR   At   [1,0][0,0][1,1]	(* =>Pfor,p_for --> sigma(=>Pfor,p_for)   @@   [1,0][0,0][1,1] *)
rule('Dr', 'Dr', c('BR', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BR',1,s0)], s2=[arg('At',2,s1)]]).

%% Ds --> BT   At   [1,0][0,0][1,1]	(* =>Pto,p_to --> sigma(=>Pto,p_to)   @@   [1,0][0,0][1,1] *)
rule('Ds', 'Ds', c('BT', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BT',1,s0)], s2=[arg('At',2,s1)]]).

%% Dt --> i   At   [1,0][0,0][1,1]	(* =>little_v,+case,t --> sigma(=>little_v,+case,t)   @@   [1,0][0,0][1,1] *)
rule('Dt', 'Dt', c('i', 'At'), [s0=[arg('At',2,s0)], s1=[arg('i',1,s0)], s2=[arg('At',2,s1)]]).

%% Du --> BU   At   [1,0][0,0][1,1]	(* =>v,/d,little_v --> sigma(=>v,/d,little_v)   @@   [1,0][0,0][1,1] *)
rule('Du', 'Du', c('BU', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BU',1,s0)], s2=[arg('At',2,s1)]]).

%% Dv --> BV   At   [1,0][0,0][1,1]	(* =>v,/d,ven --> sigma(=>v,/d,ven)   @@   [1,0][0,0][1,1] *)
rule('Dv', 'Dv', c('BV', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BV',1,s0)], s2=[arg('At',2,s1)]]).

%% Dw --> BW   At   [1,0][0,0][1,1]	(* =>v,/d,ving --> sigma(=>v,/d,ving)   @@   [1,0][0,0][1,1] *)
rule('Dw', 'Dw', c('BW', 'At'), [s0=[arg('At',2,s0)], s1=[arg('BW',1,s0)], s2=[arg('At',2,s1)]]).
